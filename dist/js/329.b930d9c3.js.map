{"version":3,"file":"js/329.b930d9c3.js","mappings":"oPAAsM,W,IAAU,OAAC,EAAGA,EAAG,MAAO,G,OAAEC,EAAAA,EAAAA,EAAY,qC,OAAC,MAAY,CAAQ,IAAC,EAACC,YAAM,oB,MAAM,CAAU,WAAiC,QAACC,YAAYC,CAAgCC,aAAI,S,MAA4B,C,IAAoBC,EAAAA,I,YAAqC,M,OAAC,O,YAAmC,sB,IAAG,c,GAA2BJ,W,MAAO,Q,YAA2B,mBAAgB,OAAI,MAAI,SAAC,mBAAa,CAAI,EAAE,IAAS,CAAO,MAAO,CAAEI,cAAY,GAAuB,2BAAkB,GAAI,EAAU,OAAO,GAAO,gBAACC,CAAE,EAAC,K,YAAS,iB,MAAiB,CAA+B,QAAC,SAAIP,KAAG,GAAUE,MAAM,O,GAAa,CAAS,kBAAIE,OAAO,gBAAqB,EAAmB,IAA0CF,CAAAA,EAAM,KAAC,MAAM,CAAI,UAAM,KAAQ,KAA4BA,CAAAA,EAAM,sC,IAAC,MAAMM,CAAqC,gCAAE,MAAK,CAASC,KAAI,MAAkCP,CAAAA,EAAK,IAAC,C,YAAQ,c,MAAO,CAA0C,IAAO,EAAC,OAAIK,CAAE,EAAC,S,IAAC,Q,YAAkC,c,MAAoB,CAAC,KAAQ,O,OAAyBH,iCAAuB,UAAI,GAAG,CACzuC,kBACGM,EAAAA,MAAAA,MAAoB,UAExB,E,+FCgDA,GACAC,MAAA,4BACAC,KAAAA,KAAA,CACAC,OAAA,GACAC,SAAA,IAEAC,QAAA,CACAC,aAAA,SAAAC,GACAA,EAAAC,OAAAC,MAAA,EACA,EACAC,SAAA,WACA,KAAAP,OAAAQ,KAAA,CACAC,IAAA,+EACAC,GAAA,IAEA,EAEAC,YAAA,SAAAC,GACA,IACA,YAAAC,GAAA,KAAAC,MAAAC,MACAC,EAAAH,EAAA,IACAI,EAAAA,EAAAA,GAAAD,EAAA,KAAAE,WAAAC,MAAAC,IACA,IAAAC,EAAAD,EACA,KAAApB,OAAAQ,KAAA,CACAC,IAAAY,EAAAC,IACAZ,GAAAW,EAAAX,KAIA,KAAAa,YAAA,KAAAvB,OAAA,IAIAY,EAAAY,cAAAX,MAAA,IACA,OAAAY,GACAC,QAAAC,IAAA,SAAAF,EACA,CAEA,EACAG,aAAA,SAAAZ,EAAAa,GACA,IAAAC,EAAA,IAAAC,WACAD,EAAAE,OAAAC,IAEA,KAAAjC,OAAA6B,GAAApB,IAAAwB,EAAA5B,OAAAe,MAAA,EAEAU,EAAAI,cAAAlB,EACA,EAEAmB,YAAA,SAAAC,EAAAC,GACA,IAAAtC,EAAA,CACAW,GAAA2B,EAAA3B,GACAQ,UAAA,KAAAA,WAGAQ,QAAAC,IAAA,OAAA5B,GAEAuC,EAAAA,EAAAH,YAAApC,GAAAoB,MAAA,KACA,KAAAnB,OAAAuC,OAAAH,EAAA,GACA,KAAAb,YAAA,KAAAvB,OAAA,GAEA,EAEAuB,YAAA,SAAAiB,GACA,KAAAC,MAAA,SAAAD,EACA,EACAE,UAAA,WACAhB,QAAAC,IAAA,uBAAAgB,YACA,GAGAC,MAAA,CACA,EACAC,OAAAA,GACA,KAAA7C,OAAA,KAAA2C,YACA,KAAAG,QACA,SAAAH,cACAI,IAEA,KAAA/C,OAAA+C,CAAA,GAIA,GCtIoR,I,UCQhRC,GAAY,OACd,EACAC,EACApD,GACA,EACA,KACA,WACA,MAIF,EAAemD,EAAiB,O,iECQ5BE,EAAe,iCAIfC,EAA4B,gBAM5BC,EAAmC,KAMnCC,EAAgC,IAMhCC,EAAsC,SAAUC,GAOhD,SAASD,EAAqBE,EAAMC,GAChC,IAAIC,EAAQH,EAAOI,KAAKC,KAAMC,EAAYL,GAAO,qBAAuBC,EAAU,KAAOI,EAAYL,GAAQ,MAAQI,KASrH,OALAF,EAAMI,WAAa,CAAEC,eAAgB,MACrCL,EAAMM,aAAeN,EAAMD,QAG3BQ,OAAOC,eAAeR,EAAOJ,EAAqBa,WAC3CT,CACX,CA0BA,OA3CA,QAAUJ,EAAsBC,GAqBhCD,EAAqBa,UAAUC,YAAc,SAAUZ,GACnD,OAAOK,EAAYL,KAAUI,KAAKJ,IACtC,EACAS,OAAOI,eAAef,EAAqBa,UAAW,iBAAkB,CAIpEG,IAAK,WACD,OAAOV,KAAKE,WAAWC,cAC3B,EACAQ,IAAK,SAAUR,GACXH,KAAKE,WAAWC,eAAiBA,EAC7BH,KAAKE,WAAWC,eAChBH,KAAKH,QAAUG,KAAKI,aAAe,KAAOJ,KAAKE,WAAWC,eAG1DH,KAAKH,QAAUG,KAAKI,YAE5B,EACAQ,YAAY,EACZC,cAAc,IAEXnB,CACX,CA7CyC,CA6CvC,MACF,SAASO,EAAYL,GACjB,MAAO,WAAaA,CACxB,CACA,SAASkB,IACL,IAAIjB,EAAU,iFAEd,OAAO,IAAIH,EAAqB,UAAyBG,EAC7D,CACA,SAASkB,EAAeC,GACpB,OAAO,IAAItB,EAAqB,mBAA2C,WAAasB,EAAO,oBACnG,CACA,SAASC,EAAcC,GACnB,OAAO,IAAIxB,EAAqB,iBAAuC,qBACnEwB,EADmE,yEAI3E,CACA,SAASC,IACL,IAAItB,EAAU,8FAEd,OAAO,IAAIH,EAAqB,kBAAyCG,EAC7E,CACA,SAASuB,IACL,OAAO,IAAI1B,EAAqB,mBAA2C,gFAC/E,CACA,SAAS2B,EAAaL,GAClB,OAAO,IAAItB,EAAqB,eAAmC,4CAA8CsB,EAAO,KAC5H,CACA,SAASM,IACL,OAAO,IAAI5B,EAAqB,uBAAmD,2DACvF,CACA,SAAS6B,IACL,OAAO,IAAI7B,EAAqB,WAA2B,qCAC/D,CACA,SAAS8B,EAAW9D,GAChB,OAAO,IAAIgC,EAAqB,cAAiC,gBAAkBhC,EAAM,KAC7F,CACA,SAAS+D,EAAqBP,GAC1B,OAAO,IAAIxB,EAAqB,yBAAuD,2BAA6BwB,EAAS,KACjI,CACA,SAASQ,IACL,OAAO,IAAIhC,EAAqB,oBAA6C,6CAEzEH,EACA,wCACR,CACA,SAASoC,IACL,OAAO,IAAIjC,EAAqB,oBAA6C,yDACjF,CACA,SAASkC,IACL,OAAO,IAAIlC,EAAqB,yBAAuD,uEAC3F,CACA,SAASmC,IACL,OAAO,IAAInC,EAAqB,kBAAyC,kDAC7E,CACA,SAASoC,EAAgBjC,GACrB,OAAO,IAAIH,EAAqB,mBAA2CG,EAC/E,CACA,SAASkC,IACL,OAAO,IAAIrC,EAAqB,cAAiC,gCACrE,CAIA,SAASsC,EAAqBC,GAC1B,OAAO,IAAIvC,EAAqB,yBAAuD,kBACnFuC,EADmF,kHAI3F,CAKA,SAASC,EAAcC,EAAQtC,GAC3B,OAAO,IAAIH,EAAqB,iBAAuC,iCAAmCyC,EAAS,MAAQtC,EAC/H,CAIA,SAASuC,EAAcvC,GACnB,MAAM,IAAIH,EAAqB,iBAAuC,mBAAqBG,EAC/F;;;;;;;;;;;;;;;;GAmBA,SAASwC,EAAaC,GAClB,OAAOC,KAAKD,EAChB;;;;;;;;;;;;;;;;GAsBA,IAAIE,EAAe,CAQfC,IAAK,MAOLC,OAAQ,SAORC,UAAW,YAUXC,SAAU,YAEVC,EAA4B,WAC5B,SAASA,EAAW1G,EAAM2G,GACtB9C,KAAK7D,KAAOA,EACZ6D,KAAK8C,YAAcA,GAAe,IACtC,CACA,OAAOD,CACX,CAN+B,GAO/B,SAASE,EAAeZ,EAAQa,GAC5B,OAAQb,GACJ,KAAKK,EAAaC,IACd,OAAO,IAAII,EAAWI,EAAWD,IACrC,KAAKR,EAAaE,OAClB,KAAKF,EAAaG,UACd,OAAO,IAAIE,EAAWK,EAAaf,EAAQa,IAC/C,KAAKR,EAAaI,SACd,OAAO,IAAIC,EAAWM,EAAcH,GAAaI,EAAoBJ,IAI7E,MAAMlC,GACV,CACA,SAASmC,EAAWvG,GAEhB,IADA,IAAI2G,EAAI,GACCpF,EAAI,EAAGA,EAAIvB,EAAM4G,OAAQrF,IAAK,CACnC,IAAIsF,EAAI7G,EAAM8G,WAAWvF,GACzB,GAAIsF,GAAK,IACLF,EAAEzG,KAAK2G,QAGP,GAAIA,GAAK,KACLF,EAAEzG,KAAK,IAAO2G,GAAK,EAAI,IAAW,GAAJA,QAG9B,GAAoB,SAAX,MAAJA,GAAsB,CAEvB,IAAIE,EAAQxF,EAAIvB,EAAM4G,OAAS,GAA2C,SAAX,MAA1B5G,EAAM8G,WAAWvF,EAAI,IAC1D,GAAKwF,EAIA,CACD,IAAIC,EAAKH,EACLI,EAAKjH,EAAM8G,aAAavF,GAC5BsF,EAAI,OAAe,KAALG,IAAc,GAAY,KAALC,EACnCN,EAAEzG,KAAK,IAAO2G,GAAK,GAAK,IAAQA,GAAK,GAAM,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,EAClF,MAPIF,EAAEzG,KAAK,IAAK,IAAK,IAQzB,MAEwB,SAAX,MAAJ2G,GAEDF,EAAEzG,KAAK,IAAK,IAAK,KAGjByG,EAAEzG,KAAK,IAAO2G,GAAK,GAAK,IAAQA,GAAK,EAAK,GAAK,IAAW,GAAJA,EAK1E,CACA,OAAO,IAAIK,WAAWP,EAC1B,CACA,SAASQ,EAAqBnH,GAC1B,IAAIoH,EACJ,IACIA,EAAUC,mBAAmBrH,EACjC,CACA,MAAOM,GACH,MAAMkF,EAAcM,EAAaI,SAAU,sBAC/C,CACA,OAAOK,EAAWa,EACtB,CACA,SAASZ,EAAaf,EAAQzF,GAC1B,OAAQyF,GACJ,KAAKK,EAAaE,OACd,IAAIsB,GAAmC,IAAxBtH,EAAMuH,QAAQ,KACzBC,GAAmC,IAAxBxH,EAAMuH,QAAQ,KAC7B,GAAID,GAAYE,EAAU,CACtB,IAAIC,EAAcH,EAAW,IAAM,IACnC,MAAM9B,EAAcC,EAAQ,sBACxBgC,EACA,oCACR,CACA,MAEJ,KAAK3B,EAAaG,UACd,IAAIyB,GAAkC,IAAxB1H,EAAMuH,QAAQ,KACxBI,GAAmC,IAAxB3H,EAAMuH,QAAQ,KAC7B,GAAIG,GAAWC,EAAU,CACjBF,EAAcC,EAAU,IAAM,IAClC,MAAMlC,EAAcC,EAAQ,sBAAwBgC,EAAc,iCACtE,CACAzH,EAAQA,EAAM4H,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KAC/C,MAIR,IAAIC,EACJ,IACIA,EAAQlC,EAAa3F,EACzB,CACA,MAAOM,GACH,MAAMkF,EAAcC,EAAQ,0BAChC,CAEA,IADA,IAAIqC,EAAQ,IAAIZ,WAAWW,EAAMjB,QACxBrF,EAAI,EAAGA,EAAIsG,EAAMjB,OAAQrF,IAC9BuG,EAAMvG,GAAKsG,EAAMf,WAAWvF,GAEhC,OAAOuG,CACX,CACA,IAAIC,EAA8B,WAC9B,SAASA,EAAaC,GAClB1E,KAAK2E,QAAS,EACd3E,KAAK8C,YAAc,KACnB,IAAI8B,EAAUF,EAAQG,MAAM,mBAC5B,GAAgB,OAAZD,EACA,MAAM1C,EAAcM,EAAaI,SAAU,yDAE/C,IAAIkC,EAASF,EAAQ,IAAM,KACb,MAAVE,IACA9E,KAAK2E,OAASI,EAASD,EAAQ,WAC/B9E,KAAK8C,YAAc9C,KAAK2E,OAClBG,EAAOE,UAAU,EAAGF,EAAOxB,OAAS,GACpCwB,GAEV9E,KAAKiF,KAAOP,EAAQM,UAAUN,EAAQT,QAAQ,KAAO,EACzD,CACA,OAAOQ,CACX,CAlBiC,GAmBjC,SAAStB,EAAc+B,GACnB,IAAIC,EAAQ,IAAIV,EAAaS,GAC7B,OAAIC,EAAMR,OACCzB,EAAaV,EAAaE,OAAQyC,EAAMF,MAGxCpB,EAAqBsB,EAAMF,KAE1C,CACA,SAAS7B,EAAoB8B,GACzB,IAAIC,EAAQ,IAAIV,EAAaS,GAC7B,OAAOC,EAAMrC,WACjB,CACA,SAASiC,EAASK,EAAGC,GACjB,IAAIC,EAAaF,EAAE9B,QAAU+B,EAAI/B,OACjC,QAAKgC,GAGEF,EAAEJ,UAAUI,EAAE9B,OAAS+B,EAAI/B,UAAY+B,CAClD;;;;;;;;;;;;;;;;GAqBA,IAqEIE,EArEAC,EAAY,CAaZC,cAAe,iBAKfC,EAAY,CAEZC,QAAS,UAETC,OAAQ,SAERC,QAAS,UAETC,SAAU,WAEVC,MAAO,SAEX,SAASC,EAA+BC,GACpC,OAAQA,GACJ,IAAK,UACL,IAAK,UACL,IAAK,YACD,OAAOP,EAAUC,QACrB,IAAK,SACD,OAAOD,EAAUE,OACrB,IAAK,UACD,OAAOF,EAAUG,QACrB,IAAK,WACD,OAAOH,EAAUI,SACrB,IAAK,QACD,OAAOJ,EAAUK,MACrB,QAEI,OAAOL,EAAUK,MAE7B;;;;;;;;;;;;;;;;IAsBA,SAAWR,GACPA,EAAUA,EAAU,YAAc,GAAK,WACvCA,EAAUA,EAAU,iBAAmB,GAAK,gBAC5CA,EAAUA,EAAU,SAAW,GAAK,OACvC,EAJD,CAIGA,IAAcA,EAAY,CAAC;;;;;;;;;;;;;;;;;AAsB9B,IAAIW,EAA+B,WAC/B,SAASA,IACL,IAAIpG,EAAQE,KACZA,KAAKmG,OAAQ,EACbnG,KAAKoG,KAAO,IAAIC,eAChBrG,KAAKsG,WAAaf,EAAUgB,SAC5BvG,KAAKwG,aAAe,IAAIC,SAAQ,SAAUC,GACtC5G,EAAMsG,KAAKO,iBAAiB,SAAS,WACjC7G,EAAMwG,WAAaf,EAAUqB,MAC7BF,GACJ,IACA5G,EAAMsG,KAAKO,iBAAiB,SAAS,WACjC7G,EAAMwG,WAAaf,EAAUsB,cAC7BH,GACJ,IACA5G,EAAMsG,KAAKO,iBAAiB,QAAQ,WAChCD,GACJ,GACJ,GACJ,CAsFA,OAlFAR,EAAc3F,UAAUuG,KAAO,SAAUpJ,EAAKqJ,EAAQC,EAAMC,GACxD,GAAIjH,KAAKmG,MACL,MAAM/D,EAAc,iCAIxB,GAFApC,KAAKmG,OAAQ,EACbnG,KAAKoG,KAAKc,KAAKH,EAAQrJ,GAAK,QACZyJ,IAAZF,EACA,IAAK,IAAIrL,KAAOqL,EACRA,EAAQG,eAAexL,IACvBoE,KAAKoG,KAAKiB,iBAAiBzL,EAAKqL,EAAQrL,GAAK0L,YAUzD,YANaH,IAATH,EACAhH,KAAKoG,KAAKU,KAAKE,GAGfhH,KAAKoG,KAAKU,OAEP9G,KAAKwG,YAChB,EAIAN,EAAc3F,UAAUgH,aAAe,WACnC,IAAKvH,KAAKmG,MACN,MAAM/D,EAAc,yCAExB,OAAOpC,KAAKsG,UAChB,EAIAJ,EAAc3F,UAAUiH,UAAY,WAChC,IAAKxH,KAAKmG,MACN,MAAM/D,EAAc,sCAExB,IACI,OAAOpC,KAAKoG,KAAKqB,MACrB,CACA,MAAOzK,GACH,OAAQ,CACZ,CACJ,EAIAkJ,EAAc3F,UAAUmH,gBAAkB,WACtC,IAAK1H,KAAKmG,MACN,MAAM/D,EAAc,4CAExB,OAAOpC,KAAKoG,KAAKuB,YACrB,EAKAzB,EAAc3F,UAAUqH,MAAQ,WAC5B5H,KAAKoG,KAAKwB,OACd,EAIA1B,EAAc3F,UAAUsH,kBAAoB,SAAUC,GAClD,OAAO9H,KAAKoG,KAAKyB,kBAAkBC,EACvC,EAIA5B,EAAc3F,UAAUwH,0BAA4B,SAAUC,GAClC,MAApBhI,KAAKoG,KAAK6B,QACVjI,KAAKoG,KAAK6B,OAAOtB,iBAAiB,WAAYqB,EAEtD,EAIA9B,EAAc3F,UAAU2H,6BAA+B,SAAUF,GACrC,MAApBhI,KAAKoG,KAAK6B,QACVjI,KAAKoG,KAAK6B,OAAOE,oBAAoB,WAAYH,EAEzD,EACO9B,CACX,CA1GkC,GA2GlC,SAASkC,IACL,OAAO,IAAIlC,CACf;;;;;;;;;;;;;;;;GAqBA,IAAImC,EAAgC,WAChC,SAASA,IACT,CAIA,OAHAA,EAAe9H,UAAU+H,iBAAmB,WACxC,OAAOF,GACX,EACOC,CACX,CAPmC,GA8B/BE,EAA0B,WAC1B,SAASA,EAASrH,EAAQF,GACtBhB,KAAKkB,OAASA,EACdlB,KAAKwI,MAAQxH,CACjB,CAiGA,OAhGAX,OAAOI,eAAe8H,EAAShI,UAAW,OAAQ,CAC9CG,IAAK,WACD,OAAOV,KAAKwI,KAChB,EACA5H,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe8H,EAAShI,UAAW,SAAU,CAChDG,IAAK,WACD,OAA4B,IAArBV,KAAKgB,KAAKsC,MACrB,EACA1C,YAAY,EACZC,cAAc,IAElB0H,EAAShI,UAAUkI,cAAgB,WAC/B,IAAIC,EAASC,mBACb,MAAO,MAAQD,EAAO1I,KAAKkB,QAAU,MAAQwH,EAAO1I,KAAKgB,KAC7D,EACAuH,EAAShI,UAAUqI,oBAAsB,WACrC,IAAIF,EAASC,mBACb,MAAO,MAAQD,EAAO1I,KAAKkB,QAAU,IACzC,EACAqH,EAASM,mBAAqB,SAAUC,EAAcC,GAClD,IAAIC,EACJ,IACIA,EAAiBT,EAASU,YAAYH,EAAcC,EACxD,CACA,MAAO/L,GAGH,OAAO,IAAIuL,EAASO,EAAc,GACtC,CACA,GAA4B,KAAxBE,EAAehI,KACf,OAAOgI,EAGP,MAAMvH,EAAqBqH,EAEnC,EACAP,EAASU,YAAc,SAAUvL,EAAKqL,GAClC,IAAIG,EAAW,KACXC,EAAe,sBACnB,SAASC,EAASC,GAC+B,MAAzCA,EAAIrI,KAAKsI,OAAOD,EAAIrI,KAAKsC,OAAS,KAClC+F,EAAIb,MAAQa,EAAIb,MAAMe,MAAM,GAAI,GAExC,CACA,IAAIC,EAAS,YACTC,EAAU,IAAIC,OAAO,SAAWP,EAAeK,EAAQ,KACvDG,EAAY,CAAEzI,OAAQ,EAAGF,KAAM,GACnC,SAAS4I,EAAWP,GAChBA,EAAIb,MAAQzE,mBAAmBsF,EAAIrI,KACvC,CAyBA,IAxBA,IAAI6I,EAAU,iBACVC,EAAsBf,EAAKzE,QAAQ,OAAQ,OAC3CyF,EAAsB,kBACtBC,EAAwB,IAAIN,OAAO,aAAeI,EAAsB,IAAMD,EAAU,MAAQV,EAAe,KAAOY,EAAqB,KAC3IE,EAAyB,CAAE/I,OAAQ,EAAGF,KAAM,GAC5CkJ,EAAmBnB,IAASzJ,EAC1B,sDACAyJ,EACFoB,EAAmB,WACnBC,EAAqB,IAAIV,OAAO,aAAeQ,EAAmB,IAAMf,EAAe,IAAMgB,EAAkB,KAC/GE,EAAsB,CAAEnJ,OAAQ,EAAGF,KAAM,GACzCsJ,EAAS,CACT,CAAEC,MAAOd,EAASe,QAASb,EAAWc,WAAYrB,GAClD,CACImB,MAAOP,EACPQ,QAASP,EACTQ,WAAYb,GAEhB,CACIW,MAAOH,EACPI,QAASH,EACTI,WAAYb,IAGX3L,EAAI,EAAGA,EAAIqM,EAAOhH,OAAQrF,IAAK,CACpC,IAAIyM,EAAQJ,EAAOrM,GACf0M,EAAWD,EAAMH,MAAMK,KAAKlN,GAChC,GAAIiN,EAAU,CACV,IAAIE,EAAcF,EAASD,EAAMF,QAAQtJ,QACrC4J,EAAYH,EAASD,EAAMF,QAAQxJ,MAClC8J,IACDA,EAAY,IAEhB5B,EAAW,IAAIX,EAASsC,EAAaC,GACrCJ,EAAMD,WAAWvB,GACjB,KACJ,CACJ,CACA,GAAgB,MAAZA,EACA,MAAM1H,EAAW9D,GAErB,OAAOwL,CACX,EACOX,CACX,CAtG6B,GA2GzBwC,EAA6B,WAC7B,SAASA,EAAYlN,GACjBmC,KAAKgL,SAAWvE,QAAQwE,OAAOpN,EACnC,CAQA,OANAkN,EAAYxK,UAAU2K,WAAa,WAC/B,OAAOlL,KAAKgL,QAChB,EAEAD,EAAYxK,UAAU4K,OAAS,SAAUC,GACzC,EACOL,CACX,CAZgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoChC,SAASM,EAAMC,EAEfC,EAAUC,GAGN,IAAIC,EAAc,EAIdC,EAAY,KACZC,GAAa,EACbC,EAAc,EAClB,SAASrK,IACL,OAAuB,IAAhBqK,CACX,CACA,IAAIC,GAAoB,EACxB,SAASC,IAEL,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAU3I,OAAQ0I,IACpCD,EAAKC,GAAMC,UAAUD,GAEpBH,IACDA,GAAoB,EACpBN,EAASW,MAAM,KAAMH,GAE7B,CACA,SAASI,EAAcC,GACnBV,EAAYW,YAAW,WACnBX,EAAY,KACZJ,EAAEgB,EAAS/K,IACf,GAAG6K,EACP,CACA,SAASE,EAAQC,GAEb,IADA,IAAIR,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAU3I,OAAQ0I,IACpCD,EAAKC,EAAK,GAAKC,UAAUD,GAE7B,IAAIH,EAGJ,GAAIU,EACAT,EAAgB/L,KAAKmM,MAAMJ,GAAiB,QAAc,CAAC,KAAMS,GAAUR,QAD/E,CAIA,IASIS,EATAC,EAAWlL,KAAcoK,EAC7B,GAAIc,EACAX,EAAgB/L,KAAKmM,MAAMJ,GAAiB,QAAc,CAAC,KAAMS,GAAUR,SAG3EN,EAAc,KAEdA,GAAe,GAGC,IAAhBG,GACAA,EAAc,EACdY,EAAa,GAGbA,EAA6C,KAA/Bf,EAAciB,KAAKC,UAErCR,EAAcK,EAlBd,CAmBJ,CACA,IAAII,GAAU,EACd,SAASC,EAAKC,GACNF,IAGJA,GAAU,EACNf,IAGc,OAAdH,GACKoB,IACDlB,EAAc,GAElBmB,aAAarB,GACbS,EAAc,IAGTW,IACDlB,EAAc,IAG1B,CAMA,OALAO,EAAc,GACdE,YAAW,WACPV,GAAa,EACbkB,GAAK,EACT,GAAGrB,GACIqB,CACX,CAQA,SAASA,EAAK/P,GACVA,GAAG,EACP;;;;;;;;;;;;;;;;GAkBA,SAASkQ,GAAUC,GACf,YAAa,IAANA,CACX,CAEA,SAASC,GAAWD,GAChB,MAAoB,oBAANA,CAClB,CACA,SAASE,GAAiBF,GACtB,MAAoB,kBAANA,IAAmBG,MAAMC,QAAQJ,EACnD,CACA,SAASK,GAASL,GACd,MAAoB,kBAANA,GAAkBA,aAAaM,MACjD,CACA,SAASC,GAAaP,GAClB,OAAOQ,MAAyBR,aAAaS,IACjD,CACA,SAASD,KACL,MAAuB,qBAATC,IAClB,CACA,SAASC,GAAeC,EAAUC,EAAUC,EAAUpR,GAClD,GAAIA,EAAQmR,EACR,MAAM/L,EAAgB,sBAAwB8L,EAAW,eAAiBC,EAAW,gBAEzF,GAAInR,EAAQoR,EACR,MAAMhM,EAAgB,sBAAwB8L,EAAW,eAAiBE,EAAW,YAE7F;;;;;;;;;;;;;;;;GAkBA,SAASC,GAAQC,EAASjF,GACtB,IAAIkF,EAAgBlF,EAAKlE,MAAM,iBAC3BqJ,EAA6B,OAAlBD,QAA4C,IAAlBA,OAA2B,EAASA,EAAc,GACvFE,EAASpF,EAIb,OAHgB,MAAZmF,IACAC,EAAS,WAAapF,GAEnBoF,EAAS,MAAQH,CAC5B,CACA,SAASI,GAAgBC,GACrB,IAAI3F,EAASC,mBACT2F,EAAY,IAChB,IAAK,IAAI1S,KAAOyS,EACZ,GAAIA,EAAOjH,eAAexL,GAAM,CAC5B,IAAI2S,EAAW7F,EAAO9M,GAAO,IAAM8M,EAAO2F,EAAOzS,IACjD0S,EAAYA,EAAYC,EAAW,GACvC,CAIJ,OADAD,EAAYA,EAAU/E,MAAM,GAAI,GACzB+E,CACX;;;;;;;;;;;;;;;;GAkBA,IAAIE,GAAgC,WAChC,SAASA,EAAe9Q,EAAKqJ,EAAQE,EAASD,EAAMyH,EAAcC,EAAsBnD,EAAUoD,EAAenD,EAASoD,EAAkBC,GACxI,IAAI/O,EAAQE,KACZA,KAAK8O,mBAAqB,KAC1B9O,KAAK+O,WAAa,KAClB/O,KAAKgP,WAAY,EACjBhP,KAAKiP,YAAa,EAClBjP,KAAKkP,KAAOxR,EACZsC,KAAKmP,QAAUpI,EACf/G,KAAKoP,SAAWnI,EAChBjH,KAAKqP,MAAQrI,EACbhH,KAAKsP,cAAgBb,EAAalF,QAClCvJ,KAAKuP,sBAAwBb,EAAqBnF,QAClDvJ,KAAKwP,UAAYjE,EACjBvL,KAAKyP,eAAiBd,EACtB3O,KAAK0P,kBAAoBd,EACzB5O,KAAK2P,SAAWnE,EAChBxL,KAAK4P,MAAQf,EACb7O,KAAKgL,SAAW,IAAIvE,SAAQ,SAAUC,EAASuE,GAC3CnL,EAAM+P,SAAWnJ,EACjB5G,EAAMgQ,QAAU7E,EAChBnL,EAAMiQ,QACV,GACJ,CA2HA,OAvHAvB,EAAejO,UAAUwP,OAAS,WAC9B,IAAIC,EAAOhQ,KACX,SAASiQ,EAAaC,EAAiB3O,GACnC,GAAIA,EACA2O,GAAgB,EAAO,IAAIC,IAAiB,EAAO,MAAM,QAD7D,CAIA,IAAIC,EAAaJ,EAAKJ,MAAMtH,mBAC5B0H,EAAKlB,mBAAqBsB,EAQK,OAA3BJ,EAAKN,mBACLU,EAAWrI,0BAA0BsI,GAGzCD,EACKtJ,KAAKkJ,EAAKd,KAAMc,EAAKb,QAASa,EAAKX,MAAOW,EAAKZ,UAC/C7R,MAAK,WACyB,OAA3ByS,EAAKN,mBACLU,EAAWlI,6BAA6BmI,GAE5CL,EAAKlB,mBAAqB,KAC1B,IAAIwB,EAAYF,EAAW7I,iBAAmBhC,EAAUgB,SACpDkB,EAAS2I,EAAW5I,YACxB,GAAK8I,IAAaN,EAAKO,mBAAmB9I,GAA1C,CAKA,IAAI+I,GAAsD,IAAxCR,EAAKV,cAAcrL,QAAQwD,GAC7CyI,GAAgB,EAAM,IAAIC,GAAiBK,EAAaJ,GAFxD,KAJA,CACI,IAAIK,EAAcL,EAAW7I,iBAAmBhC,EAAUqB,MAC1DsJ,GAAgB,EAAO,IAAIC,IAAiB,EAAO,KAAMM,GAE7D,CAGJ,GA9BA,CAGA,SAASJ,EAAiBK,GACtB,IAAIC,EAASD,EAAcC,OACvBC,EAAQF,EAAcG,iBAAmBH,EAAcE,OAAS,EACrC,OAA3BZ,EAAKN,mBACLM,EAAKN,kBAAkBiB,EAAQC,EAEvC,CAsBJ,CAKA,SAASE,EAAYC,EAAoBtJ,GACrC,IAAIf,EAAUsJ,EAAKH,SACf5E,EAAS+E,EAAKF,QACdM,EAAa3I,EAAO2I,WACxB,GAAI3I,EAAOuJ,eACP,IACI,IAAIxT,EAASwS,EAAKR,UAAUY,EAAYA,EAAW1I,mBAC/CsF,GAAUxP,GACVkJ,EAAQlJ,GAGRkJ,GAER,CACA,MAAO1J,GACHiO,EAAOjO,EACX,MAGA,GAAmB,OAAfoT,EAAqB,CACrB,IAAIa,EAAMnQ,IACVmQ,EAAI9Q,eAAiBiQ,EAAW1I,kBAC5BsI,EAAKP,eACLxE,EAAO+E,EAAKP,eAAeW,EAAYa,IAGvChG,EAAOgG,EAEf,MAEI,GAAIxJ,EAAOlG,SAAU,CACb0P,EAAMjB,EAAKf,WAAalN,IAAeR,IAC3C0J,EAAOgG,EACX,KACK,CACGA,EAAM3P,IACV2J,EAAOgG,EACX,CAGZ,CACIjR,KAAKgP,UACL8B,GAAY,EAAO,IAAIX,IAAiB,EAAO,MAAM,IAGrDnQ,KAAK+O,WAAa1D,EAAM4E,EAAca,EAAa9Q,KAAK2P,SAEhE,EAEAnB,EAAejO,UAAU2K,WAAa,WAClC,OAAOlL,KAAKgL,QAChB,EAEAwD,EAAejO,UAAU4K,OAAS,SAAU+F,GACxClR,KAAKgP,WAAY,EACjBhP,KAAKiP,WAAaiC,IAAa,EACP,OAApBlR,KAAK+O,YACLlC,EAAK7M,KAAK+O,YAEkB,OAA5B/O,KAAK8O,oBACL9O,KAAK8O,mBAAmBlH,OAEhC,EACA4G,EAAejO,UAAUgQ,mBAAqB,SAAU9I,GAGpD,IAAI0J,EAAoB1J,GAAU,KAAOA,EAAS,IAC9C2J,EAAkB,CAElB,IAEA,KAEAC,GAAwD,IAArCD,EAAgBnN,QAAQwD,GAC3C6J,GAA6E,IAAhDtR,KAAKuP,sBAAsBtL,QAAQwD,GACpE,OAAO0J,GAAqBE,GAAoBC,CACpD,EACO9C,CACX,CAnJmC,GAwJ/B2B,GAAkC,WAClC,SAASA,EAAiBa,EAAgBZ,EAAY7O,GAClDvB,KAAKgR,eAAiBA,EACtBhR,KAAKoQ,WAAaA,EAClBpQ,KAAKuB,WAAaA,CACtB,CACA,OAAO4O,CACX,CAPqC,GAQrC,SAASoB,GAAetK,EAASuK,GACX,OAAdA,GAAsBA,EAAUlO,OAAS,IACzC2D,EAAQ,iBAAmB,YAAcuK,EAEjD,CACA,SAASC,GAAkBxK,EAASyK,GAChCzK,EAAQ,8BACJ,UAAgC,OAApByK,QAAgD,IAApBA,EAA6BA,EAAkB,aAC/F,CACA,SAASC,GAAgB1K,EAAS2K,GAC1BA,IACA3K,EAAQ,oBAAsB2K,EAEtC,CACA,SAASC,GAAmB5K,EAAS6K,GACX,OAAlBA,IACA7K,EAAQ,uBAAyB6K,EAEzC,CACA,SAASC,GAAYC,EAAaJ,EAAOJ,EAAWM,EAAejD,EAAM6C,GACrE,IAAIpD,EAAYF,GAAgB4D,EAAYC,WACxCvU,EAAMsU,EAAYtU,IAAM4Q,EACxBrH,EAAU5G,OAAO6R,OAAO,CAAC,EAAGF,EAAY/K,SAK5C,OAJA0K,GAAgB1K,EAAS2K,GACzBL,GAAetK,EAASuK,GACxBC,GAAkBxK,EAASyK,GAC3BG,GAAmB5K,EAAS6K,GACrB,IAAItD,GAAe9Q,EAAKsU,EAAYjL,OAAQE,EAAS+K,EAAYhL,KAAMgL,EAAYvD,aAAcuD,EAAYtD,qBAAsBsD,EAAY1F,QAAS0F,EAAYG,aAAcH,EAAYxG,QAASwG,EAAYpD,iBAAkBC,EAChP;;;;;;;;;;;;;;;;GAkBA,SAASuD,KACL,MAA2B,qBAAhBC,YACAA,YAE2B,qBAAtBC,kBACLA,uBAGP,CAER,CAOA,SAASC,KAEL,IADA,IAAIxG,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAU3I,OAAQ0I,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,IAAIqG,EAAcD,KAClB,QAAoBjL,IAAhBkL,EAA2B,CAE3B,IADA,IAAIG,EAAK,IAAIH,EACJpU,EAAI,EAAGA,EAAI8N,EAAKzI,OAAQrF,IAC7BuU,EAAGC,OAAO1G,EAAK9N,IAEnB,OAAOuU,EAAGD,SACd,CAEI,GAAI9E,KACA,OAAO,IAAIC,KAAK3B,GAGhB,MAAM,IAAIrM,EAAqB,0BAAyD,sDAGpG,CAUA,SAASgT,GAAUC,EAAMtH,EAAOhG,GAC5B,OAAIsN,EAAKC,YACED,EAAKC,YAAYvH,EAAOhG,GAE1BsN,EAAKE,SACHF,EAAKE,SAASxH,EAAOhG,GAEvBsN,EAAKpJ,MACHoJ,EAAKpJ,MAAM8B,EAAOhG,GAEtB,IACX;;;;;;;;;;;;;;;;GAyBA,IAAIyN,GAAyB,WACzB,SAASA,EAAQ3W,EAAM4W,GACnB,IAAIC,EAAO,EACPC,EAAW,GACXzF,GAAarR,IACb6D,KAAKkT,MAAQ/W,EACb6W,EAAO7W,EAAK6W,KACZC,EAAW9W,EAAKgX,MAEXhX,aAAgBiX,aACjBL,EACA/S,KAAKkT,MAAQ,IAAItP,WAAWzH,IAG5B6D,KAAKkT,MAAQ,IAAItP,WAAWzH,EAAKkX,YACjCrT,KAAKkT,MAAMvS,IAAI,IAAIiD,WAAWzH,KAElC6W,EAAOhT,KAAKkT,MAAM5P,QAEbnH,aAAgByH,aACjBmP,EACA/S,KAAKkT,MAAQ/W,GAGb6D,KAAKkT,MAAQ,IAAItP,WAAWzH,EAAKmH,QACjCtD,KAAKkT,MAAMvS,IAAIxE,IAEnB6W,EAAO7W,EAAKmH,QAEhBtD,KAAKsT,MAAQN,EACbhT,KAAKuT,MAAQN,CACjB,CAgEA,OA/DAH,EAAQvS,UAAUyS,KAAO,WACrB,OAAOhT,KAAKsT,KAChB,EACAR,EAAQvS,UAAU4S,KAAO,WACrB,OAAOnT,KAAKuT,KAChB,EACAT,EAAQvS,UAAUgJ,MAAQ,SAAUiK,EAAWC,GAC3C,GAAIjG,GAAaxN,KAAKkT,OAAQ,CAC1B,IAAIQ,EAAW1T,KAAKkT,MAChBS,EAASjB,GAAUgB,EAAUF,EAAWC,GAC5C,OAAe,OAAXE,EACO,KAEJ,IAAIb,EAAQa,EACvB,CAEI,IAAIpK,EAAQ,IAAI3F,WAAW5D,KAAKkT,MAAMU,OAAQJ,EAAWC,EAAUD,GACnE,OAAO,IAAIV,EAAQvJ,GAAO,EAElC,EACAuJ,EAAQP,QAAU,WAEd,IADA,IAAIxG,EAAO,GACFC,EAAK,EAAGA,EAAKC,UAAU3I,OAAQ0I,IACpCD,EAAKC,GAAMC,UAAUD,GAEzB,GAAIyB,KAAuB,CACvB,IAAIoG,EAAS9H,EAAK+H,KAAI,SAAUC,GAC5B,OAAIA,aAAejB,EACRiB,EAAIb,MAGJa,CAEf,IACA,OAAO,IAAIjB,EAAQP,GAAQrG,MAAM,KAAM2H,GAC3C,CAEI,IAAIG,EAAcjI,EAAK+H,KAAI,SAAUC,GACjC,OAAIzG,GAASyG,GACFhR,EAAeP,EAAaC,IAAKsR,GAAK5X,KAItC4X,EAAIb,KAEnB,IACIe,EAAgB,EACpBD,EAAYE,SAAQ,SAAU1P,GAC1ByP,GAAiBzP,EAAM6O,UAC3B,IACA,IAAIc,EAAW,IAAIvQ,WAAWqQ,GAC1BG,EAAU,EAMd,OALAJ,EAAYE,SAAQ,SAAU1P,GAC1B,IAAK,IAAIvG,EAAI,EAAGA,EAAIuG,EAAMlB,OAAQrF,IAC9BkW,EAASC,KAAa5P,EAAMvG,EAEpC,IACO,IAAI6U,EAAQqB,GAAU,EAErC,EACArB,EAAQvS,UAAU8T,WAAa,WAC3B,OAAOrU,KAAKkT,KAChB,EACOJ,CACX,CAhG4B;;;;;;;;;;;;;;;;GAsH5B,SAASwB,GAAiBlP,GACtB,IAAImP,EACJ,IACIA,EAAMC,KAAKC,MAAMrP,EACrB,CACA,MAAOpI,GACH,OAAO,IACX,CACA,OAAImQ,GAAiBoH,GACVA,EAGA,IAEf;;;;;;;;;;;;;;;;GAwBA,SAAS,GAAOvT,GACZ,GAAoB,IAAhBA,EAAKsC,OACL,OAAO,KAEX,IAAI9E,EAAQwC,EAAK0T,YAAY,KAC7B,IAAe,IAAXlW,EACA,MAAO,GAEX,IAAImW,EAAU3T,EAAKuI,MAAM,EAAG/K,GAC5B,OAAOmW,CACX,CACA,SAASC,GAAM5T,EAAM6T,GACjB,IAAIC,EAAqBD,EACpBE,MAAM,KACNC,QAAO,SAAU5V,GAAa,OAAOA,EAAUkE,OAAS,CAAG,IAC3D2R,KAAK,KACV,OAAoB,IAAhBjU,EAAKsC,OACEwR,EAGA9T,EAAO,IAAM8T,CAE5B,CAOA,SAASI,GAAclU,GACnB,IAAIxC,EAAQwC,EAAK0T,YAAY,IAAK1T,EAAKsC,OAAS,GAChD,OAAe,IAAX9E,EACOwC,EAGAA,EAAKuI,MAAM/K,EAAQ,EAElC;;;;;;;;;;;;;;;;GAkBA,SAAS2W,GAASC,EAAU1Y,GACxB,OAAOA,CACX,CACA,IAAI2Y,GAAyB,WACzB,SAASA,EAAQC,EAAQC,EAAOC,EAAUC,GACtCzV,KAAKsV,OAASA,EACdtV,KAAKuV,MAAQA,GAASD,EACtBtV,KAAKwV,WAAaA,EAClBxV,KAAKyV,MAAQA,GAASN,EAC1B,CACA,OAAOE,CACX,CAR4B,GASxBK,GAAY,KAChB,SAASC,GAAUC,GACf,OAAKtI,GAASsI,IAAaA,EAAStS,OAAS,EAClCsS,EAGAV,GAAcU,EAE7B,CACA,SAASC,KACL,GAAIH,GACA,OAAOA,GAEX,IAAII,EAAW,GAKf,SAASC,EAAkBC,EAAWJ,GAClC,OAAOD,GAAUC,EACrB,CANAE,EAASlZ,KAAK,IAAIyY,GAAQ,WAC1BS,EAASlZ,KAAK,IAAIyY,GAAQ,eAC1BS,EAASlZ,KAAK,IAAIyY,GAAQ,mBAC1BS,EAASlZ,KAAK,IAAIyY,GAAQ,OAAQ,YAAY,IAI9C,IAAIY,EAAc,IAAIZ,GAAQ,QAM9B,SAASa,EAAUF,EAAWhD,GAC1B,YAAa7L,IAAT6L,EACOmD,OAAOnD,GAGPA,CAEf,CAZAiD,EAAYR,MAAQM,EACpBD,EAASlZ,KAAKqZ,GAYd,IAAIG,EAAc,IAAIf,GAAQ,QAa9B,OAZAe,EAAYX,MAAQS,EACpBJ,EAASlZ,KAAKwZ,GACdN,EAASlZ,KAAK,IAAIyY,GAAQ,gBAC1BS,EAASlZ,KAAK,IAAIyY,GAAQ,YAC1BS,EAASlZ,KAAK,IAAIyY,GAAQ,UAAW,MAAM,IAC3CS,EAASlZ,KAAK,IAAIyY,GAAQ,eAAgB,MAAM,IAChDS,EAASlZ,KAAK,IAAIyY,GAAQ,qBAAsB,MAAM,IACtDS,EAASlZ,KAAK,IAAIyY,GAAQ,kBAAmB,MAAM,IACnDS,EAASlZ,KAAK,IAAIyY,GAAQ,kBAAmB,MAAM,IACnDS,EAASlZ,KAAK,IAAIyY,GAAQ,cAAe,MAAM,IAC/CS,EAASlZ,KAAK,IAAIyY,GAAQ,WAAY,kBAAkB,IACxDK,GAAYI,EACLJ,EACX,CACA,SAASW,GAAOjB,EAAUkB,GACtB,SAASC,IACL,IAAIrV,EAASkU,EAAS,UAClBpU,EAAOoU,EAAS,YAChB/L,EAAM,IAAId,EAASrH,EAAQF,GAC/B,OAAOsV,EAAQE,sBAAsBnN,EACzC,CACAhJ,OAAOI,eAAe2U,EAAU,MAAO,CAAE1U,IAAK6V,GAClD,CACA,SAASE,GAAaH,EAASI,EAAUZ,GAIrC,IAHA,IAAIV,EAAW,CACfA,KAAmB,QACfuB,EAAMb,EAASxS,OACVrF,EAAI,EAAGA,EAAI0Y,EAAK1Y,IAAK,CAC1B,IAAI2Y,EAAUd,EAAS7X,GACvBmX,EAASwB,EAAQrB,OAASqB,EAAQnB,MAAML,EAAUsB,EAASE,EAAQtB,QACvE,CAEA,OADAe,GAAOjB,EAAUkB,GACVlB,CACX,CACA,SAASyB,GAAmBP,EAASQ,EAAgBhB,GACjD,IAAIvB,EAAMD,GAAiBwC,GAC3B,GAAY,OAARvC,EACA,OAAO,KAEX,IAAImC,EAAWnC,EACf,OAAOkC,GAAaH,EAASI,EAAUZ,EAC3C,CACA,SAASiB,GAA8B3B,EAAU0B,EAAgB/N,GAC7D,IAAIwL,EAAMD,GAAiBwC,GAC3B,GAAY,OAARvC,EACA,OAAO,KAEX,IAAKjH,GAASiH,EAAI,mBAGd,OAAO,KAEX,IAAIyC,EAASzC,EAAI,kBACjB,GAAsB,IAAlByC,EAAO1T,OACP,OAAO,KAEX,IAAIoF,EAASC,mBACTsO,EAAaD,EAAOjC,MAAM,KAC1BmC,EAAOD,EAAWnD,KAAI,SAAUqD,GAChC,IAAIjW,EAASkU,EAAS,UAClBpU,EAAOoU,EAAS,YAChBpH,EAAU,MAAQtF,EAAOxH,GAAU,MAAQwH,EAAO1H,GAClDoW,EAAOrJ,GAAQC,EAASjF,GACxBsO,EAAcjJ,GAAgB,CAC9BkJ,IAAK,QACLH,MAAOA,IAEX,OAAOC,EAAOC,CAClB,IACA,OAAOH,EAAK,EAChB,CACA,SAASK,GAAiBnC,EAAUU,GAGhC,IAFA,IAAIY,EAAW,CAAC,EACZC,EAAMb,EAASxS,OACVrF,EAAI,EAAGA,EAAI0Y,EAAK1Y,IAAK,CAC1B,IAAI2Y,EAAUd,EAAS7X,GACnB2Y,EAAQpB,WACRkB,EAASE,EAAQtB,QAAUF,EAASwB,EAAQrB,OAEpD,CACA,OAAOf,KAAKgD,UAAUd,EAC1B;;;;;;;;;;;;;;;;GAkBA,IAAIe,GAAe,WACfC,GAAY,QAChB,SAASC,GAAoBrB,EAASpV,EAAQwV,GAC1C,IAAIkB,EAAa,CACbC,SAAU,GACVC,MAAO,GACPC,cAAerB,EAAS,kBAE5B,GAAIA,EAASe,IACT,IAAK,IAAIzL,EAAK,EAAGgM,EAAKtB,EAASe,IAAezL,EAAKgM,EAAG1U,OAAQ0I,IAAM,CAChE,IAAIhL,EAAOgX,EAAGhM,GACViM,EAA2BjX,EAAKsD,QAAQ,MAAO,IAC/C4T,EAAY5B,EAAQE,sBAAsB,IAAIjO,EAASrH,EAAQ+W,IACnEL,EAAWC,SAASjb,KAAKsb,EAC7B,CAEJ,GAAIxB,EAASgB,IACT,IAAK,IAAIS,EAAK,EAAG5c,EAAKmb,EAASgB,IAAYS,EAAK5c,EAAG+H,OAAQ6U,IAAM,CAC7D,IAAI1Z,EAAOlD,EAAG4c,GACVD,EAAY5B,EAAQE,sBAAsB,IAAIjO,EAASrH,EAAQzC,EAAK,UACxEmZ,EAAWE,MAAMlb,KAAKsb,EAC1B,CAEJ,OAAON,CACX,CACA,SAASQ,GAAmB9B,EAASpV,EAAQ4V,GACzC,IAAIvC,EAAMD,GAAiBwC,GAC3B,GAAY,OAARvC,EACA,OAAO,KAEX,IAAImC,EAAWnC,EACf,OAAOoD,GAAoBrB,EAASpV,EAAQwV,EAChD,CAEA,IAAI2B,GAA6B,WAC7B,SAASA,EAAY3a,EAAKqJ,EAQ1BuF,EAASd,GACLxL,KAAKtC,IAAMA,EACXsC,KAAK+G,OAASA,EACd/G,KAAKsM,QAAUA,EACftM,KAAKwL,QAAUA,EACfxL,KAAKiS,UAAY,CAAC,EAClBjS,KAAKiH,QAAU,CAAC,EAChBjH,KAAKgH,KAAO,KACZhH,KAAKmS,aAAe,KAKpBnS,KAAK4O,iBAAmB,KACxB5O,KAAKyO,aAAe,CAAC,KACrBzO,KAAK0O,qBAAuB,EAChC,CACA,OAAO2J,CACX,CA3BgC;;;;;;;;;;;;;;;;GAgDhC,SAASC,GAAaC,GAClB,IAAKA,EACD,MAAMzX,GAEd,CACA,SAAS0X,GAAgBlC,EAASR,GAC9B,SAASxJ,EAAQmM,EAAKC,GAClB,IAAItD,EAAWyB,GAAmBP,EAASoC,EAAM5C,GAEjD,OADAwC,GAA0B,OAAblD,GACNA,CACX,CACA,OAAO9I,CACX,CACA,SAASqM,GAAYrC,EAASpV,GAC1B,SAASoL,EAAQmM,EAAKC,GAClB,IAAId,EAAaQ,GAAmB9B,EAASpV,EAAQwX,GAErD,OADAJ,GAA4B,OAAfV,GACNA,CACX,CACA,OAAOtL,CACX,CACA,SAASsM,GAAmBtC,EAASR,GACjC,SAASxJ,EAAQmM,EAAKC,GAClB,IAAItD,EAAWyB,GAAmBP,EAASoC,EAAM5C,GAEjD,OADAwC,GAA0B,OAAblD,GACN2B,GAA8B3B,EAAUsD,EAAMpC,EAAQvN,KACjE,CACA,OAAOuD,CACX,CACA,SAASuM,GAAmB3P,GACxB,SAASiJ,EAAasG,EAAKxH,GACvB,IAAI6H,EA0BJ,OApBQA,EALgB,MAApBL,EAAIjR,YAIJiR,EAAI/Q,kBAAkBqR,SAAS,uCAClB3X,IAGAD,IAIW,MAApBsX,EAAIjR,YACKvG,EAAciI,EAAShI,QAGR,MAApBuX,EAAIjR,YACKnG,EAAa6H,EAASlI,MAGtBiQ,EAIrB6H,EAAO3Y,eAAiB8Q,EAAI9Q,eACrB2Y,CACX,CACA,OAAO3G,CACX,CACA,SAAS6G,GAAmB9P,GACxB,IAAI+P,EAASJ,GAAmB3P,GAChC,SAASiJ,EAAasG,EAAKxH,GACvB,IAAI6H,EAASG,EAAOR,EAAKxH,GAKzB,OAJwB,MAApBwH,EAAIjR,cACJsR,EAAS/X,EAAemI,EAASlI,OAErC8X,EAAO3Y,eAAiB8Q,EAAI9Q,eACrB2Y,CACX,CACA,OAAO3G,CACX,CACA,SAAS+G,GAAc5C,EAASpN,EAAU4M,GACtC,IAAI9H,EAAU9E,EAAST,gBACnB/K,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,MACTyE,EAAU8K,EAAQ6C,sBAClBnH,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQyR,GAAgBlC,EAASR,GAAWtK,GAEnF,OADAwG,EAAYG,aAAe6G,GAAmB9P,GACvC8I,CACX,CACA,SAASoH,GAAO9C,EAASpN,EAAUmQ,EAAWC,EAAWC,GACrD,IAAItH,EAAY,CAAC,EACb/I,EAASsQ,OACTvH,EAAU,UAAY,GAGtBA,EAAU,UAAY/I,EAASlI,KAAO,IAEtCqY,GAAaA,EAAU/V,OAAS,IAChC2O,EAAU,aAAeoH,GAEzBC,IACArH,EAAU,aAAeqH,GAEzBC,IACAtH,EAAU,cAAgBsH,GAE9B,IAAIvL,EAAU9E,EAASN,sBACnBlL,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,MACTyE,EAAU8K,EAAQ6C,sBAClBnH,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQ4R,GAAYrC,EAASpN,EAAShI,QAASsK,GAGtF,OAFAwG,EAAYC,UAAYA,EACxBD,EAAYG,aAAe0G,GAAmB3P,GACvC8I,CACX,CACA,SAASyH,GAAenD,EAASpN,EAAU4M,GACvC,IAAI9H,EAAU9E,EAAST,gBACnB/K,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,MACTyE,EAAU8K,EAAQ6C,sBAClBnH,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQ6R,GAAmBtC,EAASR,GAAWtK,GAEtF,OADAwG,EAAYG,aAAe6G,GAAmB9P,GACvC8I,CACX,CACA,SAAS0H,GAAiBpD,EAASpN,EAAUkM,EAAUU,GACnD,IAAI9H,EAAU9E,EAAST,gBACnB/K,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,QACTC,EAAOuQ,GAAiBnC,EAAUU,GAClC7O,EAAU,CAAE,eAAgB,mCAC5BuE,EAAU8K,EAAQ6C,sBAClBnH,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQyR,GAAgBlC,EAASR,GAAWtK,GAInF,OAHAwG,EAAY/K,QAAUA,EACtB+K,EAAYhL,KAAOA,EACnBgL,EAAYG,aAAe6G,GAAmB9P,GACvC8I,CACX,CACA,SAAS2H,GAAerD,EAASpN,GAC7B,IAAI8E,EAAU9E,EAAST,gBACnB/K,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,SACTyE,EAAU8K,EAAQ6C,sBACtB,SAAS7M,EAAQsN,EAAMC,GAAS,CAChC,IAAI7H,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQuF,EAASd,GAGxD,OAFAwG,EAAYvD,aAAe,CAAC,IAAK,KACjCuD,EAAYG,aAAe6G,GAAmB9P,GACvC8I,CACX,CACA,SAAS8H,GAAsB1E,EAAUzC,GACrC,OAASyC,GAAYA,EAAS,gBACzBzC,GAAQA,EAAKQ,QACd,0BACR,CACA,SAAS4G,GAAmB7Q,EAAUyJ,EAAMyC,GACxC,IAAI4E,EAAgB3Z,OAAO6R,OAAO,CAAC,EAAGkD,GAMtC,OALA4E,EAAc,YAAc9Q,EAASlI,KACrCgZ,EAAc,QAAUrH,EAAKK,OACxBgH,EAAc,iBACfA,EAAc,eAAiBF,GAAsB,KAAMnH,IAExDqH,CACX,CAIA,SAASC,GAAgB3D,EAASpN,EAAU4M,EAAUnD,EAAMyC,GACxD,IAAIpH,EAAU9E,EAASN,sBACnB3B,EAAU,CACV,yBAA0B,aAE9B,SAASiT,IAEL,IADA,IAAIC,EAAM,GACDlc,EAAI,EAAGA,EAAI,EAAGA,IACnBkc,GAAYzN,KAAKC,SAASrF,WAAWiC,MAAM,GAE/C,OAAO4Q,CACX,CACA,IAAIC,EAAWF,IACfjT,EAAQ,gBAAkB,+BAAiCmT,EAC3D,IAAIC,EAAYN,GAAmB7Q,EAAUyJ,EAAMyC,GAC/CkF,EAAiB/C,GAAiB8C,EAAWvE,GAC7CyE,EAAc,KACdH,EADc,4DAIdE,EACA,SACAF,EANc,qBASdC,EAAU,eACV,WACAG,EAAe,SAAWJ,EAAW,KACrCpT,EAAO8L,GAAQP,QAAQgI,EAAa5H,EAAM6H,GAC9C,GAAa,OAATxT,EACA,MAAMrF,IAEV,IAAIsQ,EAAY,CAAEhQ,KAAMoY,EAAU,aAC9B3c,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,OACTyE,EAAU8K,EAAQmE,mBAClBzI,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQyR,GAAgBlC,EAASR,GAAWtK,GAKnF,OAJAwG,EAAYC,UAAYA,EACxBD,EAAY/K,QAAUA,EACtB+K,EAAYhL,KAAOA,EAAKqN,aACxBrC,EAAYG,aAAe0G,GAAmB3P,GACvC8I,CACX,CAQA,IAAI0I,GAAuC,WACvC,SAASA,EAAsBC,EAAS/J,EAAOgK,EAAWxF,GACtDpV,KAAK2a,QAAUA,EACf3a,KAAK4Q,MAAQA,EACb5Q,KAAK4a,YAAcA,EACnB5a,KAAKoV,SAAWA,GAAY,IAChC,CACA,OAAOsF,CACX,CAR0C,GAS1C,SAASG,GAAmBpC,EAAKqC,GAC7B,IAAIrT,EAAS,KACb,IACIA,EAASgR,EAAI5Q,kBAAkB,uBACnC,CACA,MAAO7K,GACHsb,IAAa,EACjB,CACA,IAAIyC,EAAgBD,GAAW,CAAC,UAEhC,OADAxC,KAAe7Q,IAA6C,IAAnCsT,EAAc9W,QAAQwD,IACxCA,CACX,CACA,SAASuT,GAAsB1E,EAASpN,EAAU4M,EAAUnD,EAAMyC,GAC9D,IAAIpH,EAAU9E,EAASN,sBACnBqS,EAAoBlB,GAAmB7Q,EAAUyJ,EAAMyC,GACvDnD,EAAY,CAAEhQ,KAAMgZ,EAAkB,aACtCvd,EAAMqQ,GAAQC,EAASsI,EAAQvN,MAC/BhC,EAAS,OACTE,EAAU,CACV,yBAA0B,YAC1B,wBAAyB,QACzB,sCAAuC,GAAK0L,EAAKK,OACjD,oCAAqCiI,EAAkB,eACvD,eAAgB,mCAEhBjU,EAAOuQ,GAAiB0D,EAAmBnF,GAC3CtK,EAAU8K,EAAQmE,mBACtB,SAASnO,EAAQmM,GAEb,IAAI/a,EADJmd,GAAmBpC,GAEnB,IACI/a,EAAM+a,EAAI5Q,kBAAkB,oBAChC,CACA,MAAO7K,GACHsb,IAAa,EACjB,CAEA,OADAA,GAAahL,GAAS5P,IACfA,CACX,CACA,IAAIsU,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQuF,EAASd,GAKxD,OAJAwG,EAAYC,UAAYA,EACxBD,EAAY/K,QAAUA,EACtB+K,EAAYhL,KAAOA,EACnBgL,EAAYG,aAAe0G,GAAmB3P,GACvC8I,CACX,CAIA,SAASkJ,GAAyB5E,EAASpN,EAAUxL,EAAKiV,GACtD,IAAI1L,EAAU,CAAE,wBAAyB,SACzC,SAASqF,EAAQmM,GACb,IAAIhR,EAASoT,GAAmBpC,EAAK,CAAC,SAAU,UAC5C0C,EAAa,KACjB,IACIA,EAAa1C,EAAI5Q,kBAAkB,8BACvC,CACA,MAAO7K,GACHsb,IAAa,EACjB,CACK6C,GAED7C,IAAa,GAEjB,IAAItF,EAAOmD,OAAOgF,GAElB,OADA7C,IAAc8C,MAAMpI,IACb,IAAI0H,GAAsB1H,EAAML,EAAKK,OAAmB,UAAXvL,EACxD,CACA,IAAIV,EAAS,OACTyE,EAAU8K,EAAQmE,mBAClBzI,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQuF,EAASd,GAGxD,OAFAwG,EAAY/K,QAAUA,EACtB+K,EAAYG,aAAe0G,GAAmB3P,GACvC8I,CACX,CAKA,IAAIqJ,GAA8B,OAUlC,SAASC,GAAwBpS,EAAUoN,EAAS5Y,EAAKiV,EAAM4I,EAAWzF,EAAUrO,EAAQmH,GAGxF,IAAI4M,EAAU,IAAId,GAAsB,EAAG,GAS3C,GARIjT,GACA+T,EAAQb,QAAUlT,EAAOkT,QACzBa,EAAQ5K,MAAQnJ,EAAOmJ,QAGvB4K,EAAQb,QAAU,EAClBa,EAAQ5K,MAAQ+B,EAAKK,QAErBL,EAAKK,SAAWwI,EAAQ5K,MACxB,MAAMhP,IAEV,IAAI6Z,EAAYD,EAAQ5K,MAAQ4K,EAAQb,QACpCe,EAAgBD,EAChBF,EAAY,IACZG,EAAgBhP,KAAKiP,IAAID,EAAeH,IAE5C,IAAI/H,EAAYgI,EAAQb,QACpBlH,EAAUD,EAAYkI,EACtBE,EAAgBF,IAAkBD,EAAY,mBAAqB,SACnExU,EAAU,CACV,wBAAyB2U,EACzB,uBAAwB,GAAKJ,EAAQb,SAErC3T,EAAO2L,EAAKpJ,MAAMiK,EAAWC,GACjC,GAAa,OAATzM,EACA,MAAMrF,IAEV,SAAS2K,EAAQmM,EAAKC,GAKlB,IAGItD,EAHAyG,EAAehB,GAAmBpC,EAAK,CAAC,SAAU,UAClDqD,EAAaN,EAAQb,QAAUe,EAC/B1I,EAAOL,EAAKK,OAQhB,OALIoC,EADiB,UAAjByG,EACWrD,GAAgBlC,EAASR,EAAzB0C,CAAmCC,EAAKC,GAGxC,KAER,IAAIgC,GAAsBoB,EAAY9I,EAAuB,UAAjB6I,EAA0BzG,EACjF,CACA,IAAIrO,EAAS,OACTyE,EAAU8K,EAAQmE,mBAClBzI,EAAc,IAAIqG,GAAY3a,EAAKqJ,EAAQuF,EAASd,GAKxD,OAJAwG,EAAY/K,QAAUA,EACtB+K,EAAYhL,KAAOA,EAAKqN,aACxBrC,EAAYpD,iBAAmBA,GAAoB,KACnDoD,EAAYG,aAAe0G,GAAmB3P,GACvC8I,CACX;;;;;;;;;;;;;;;;GAkBA,IAAI+J,GAA0B,WAC1B,SAASA,EAASC,EAAgBne,EAAOoe,GACrC,IAAIC,EAAchP,GAAW8O,IAA4B,MAATne,GAA6B,MAAZoe,EACjE,GAAIC,EACAlc,KAAKmc,KAAOH,EACZhc,KAAKnC,MAAQA,EACbmC,KAAKic,SAAWA,MAEf,CACD,IAAIG,EAAWJ,EACfhc,KAAKmc,KAAOC,EAASD,KACrBnc,KAAKnC,MAAQue,EAASve,MACtBmC,KAAKic,SAAWG,EAASH,QAC7B,CACJ,CACA,OAAOF,CACX,CAhB6B;;;;;;;;;;;;;;;;GAwC7B,SAAS,GAAMzQ,GACX,OAAO,WAEH,IADA,IAAI+Q,EAAgB,GACXrQ,EAAK,EAAGA,EAAKC,UAAU3I,OAAQ0I,IACpCqQ,EAAcrQ,GAAMC,UAAUD,GAGlCvF,QAAQC,UAAUnJ,MAAK,WAAc,OAAO+N,EAAEY,WAAM,EAAQmQ,EAAgB,GAChF,CACJ;;;;;;;;;;;;;;;;GAuBA,IAAIC,GAA4B,WAM5B,SAASA,EAAWtgB,EAAK2W,EAAMyC,GAC3B,IAAItV,EAAQE,UACK,IAAboV,IAAuBA,EAAW,MAItCpV,KAAKuc,aAAe,EACpBvc,KAAKwc,oBAAqB,EAC1Bxc,KAAKyc,sBAAuB,EAC5Bzc,KAAK0c,WAAa,GAClB1c,KAAK2c,YAASxV,EACdnH,KAAK4c,gBAAazV,EAClBnH,KAAK6c,cAAW1V,EAChBnH,KAAK8c,iBAAmB,EACxB9c,KAAK+c,cAAW5V,EAChBnH,KAAKgd,aAAU7V,EACfnH,KAAKid,KAAOjhB,EACZgE,KAAKkd,MAAQvK,EACb3S,KAAKgW,UAAYZ,EACjBpV,KAAKmd,UAAYtH,KACjB7V,KAAKod,WAAapd,KAAKqd,mBAAmBrd,KAAKkd,OAC/Cld,KAAKsd,OAAS,UACdtd,KAAKud,cAAgB,SAAU1f,GAC3BiC,EAAM+c,cAAW1V,EACjBrH,EAAMgd,iBAAmB,EACrBjf,EAAM2C,YAAY,aAClBV,EAAM0c,oBAAqB,EAC3B1c,EAAM0d,yBAGN1d,EAAM6c,OAAS9e,EACfiC,EAAM2d,YAAY,SAE1B,EACAzd,KAAK0d,sBAAwB,SAAU7f,GACnCiC,EAAM+c,cAAW1V,EACbtJ,EAAM2C,YAAY,YAClBV,EAAM0d,wBAGN1d,EAAM6c,OAAS9e,EACfiC,EAAM2d,YAAY,SAE1B,EACAzd,KAAK2d,SAAW,IAAIlX,SAAQ,SAAUC,EAASuE,GAC3CnL,EAAMid,SAAWrW,EACjB5G,EAAMkd,QAAU/R,EAChBnL,EAAM8d,QACV,IAGA5d,KAAK2d,SAASpgB,KAAK,MAAM,WAAc,GAC3C,CAmaA,OAlaA+e,EAAW/b,UAAUsd,sBAAwB,WACzC,IAAI/d,EAAQE,KACR8d,EAAa9d,KAAKuc,aACtB,OAAO,SAAU5L,GAAU,OAAO7Q,EAAMie,gBAAgBD,EAAanN,EAAS,CAClF,EACA2L,EAAW/b,UAAU8c,mBAAqB,SAAU1K,GAChD,OAAOA,EAAKK,OAAS,MACzB,EACAsJ,EAAW/b,UAAUqd,OAAS,WACN,YAAhB5d,KAAKsd,aAIanW,IAAlBnH,KAAK6c,WAGL7c,KAAKod,gBACmBjW,IAApBnH,KAAK4c,WACL5c,KAAKge,mBAGDhe,KAAKwc,mBACLxc,KAAKie,eAGDje,KAAKyc,qBAELzc,KAAKke,iBAGLle,KAAKme,kBAMjBne,KAAKoe,iBAEb,EACA9B,EAAW/b,UAAU8d,cAAgB,SAAU9S,GAC3C,IAAIzL,EAAQE,KAEZyG,QAAQ6X,IAAI,CACRte,KAAKid,KAAKsB,QAAQC,gBAClBxe,KAAKid,KAAKsB,QAAQE,sBACnBlhB,MAAK,SAAUya,GACd,IAAIxG,EAAYwG,EAAG,GAAIlG,EAAgBkG,EAAG,GAC1C,OAAQlY,EAAMwd,QACV,IAAK,UACD/R,EAASiG,EAAWM,GACpB,MACJ,IAAK,YACDhS,EAAM2d,YAAY,YAClB,MACJ,IAAK,UACD3d,EAAM2d,YAAY,UAClB,MAEZ,GACJ,EAEAnB,EAAW/b,UAAUyd,iBAAmB,WACpC,IAAIle,EAAQE,KACZA,KAAKqe,eAAc,SAAU7M,EAAWM,GACpC,IAAIE,EAAcgJ,GAAsBlb,EAAMmd,KAAKsB,QAASze,EAAMmd,KAAKyB,UAAW5e,EAAMqd,UAAWrd,EAAMod,MAAOpd,EAAMkW,WAClH2I,EAAgB7e,EAAMmd,KAAKsB,QAAQK,aAAa5M,EAAaR,EAAWM,GAC5EhS,EAAM+c,SAAW8B,EACjBA,EAAczT,aAAa3N,MAAK,SAAUG,GACtCoC,EAAM+c,cAAW1V,EACjBrH,EAAM8c,WAAalf,EACnBoC,EAAM0c,oBAAqB,EAC3B1c,EAAM0d,sBACV,GAAG1d,EAAMyd,cACb,GACJ,EACAjB,EAAW/b,UAAU0d,aAAe,WAChC,IAAIne,EAAQE,KAERtC,EAAMsC,KAAK4c,WACf5c,KAAKqe,eAAc,SAAU7M,EAAWM,GACpC,IAAIE,EAAckJ,GAAyBpb,EAAMmd,KAAKsB,QAASze,EAAMmd,KAAKyB,UAAWhhB,EAAKoC,EAAMod,OAC5F2B,EAAgB/e,EAAMmd,KAAKsB,QAAQK,aAAa5M,EAAaR,EAAWM,GAC5EhS,EAAM+c,SAAWgC,EACjBA,EAAc3T,aAAa3N,MAAK,SAAUkK,GAEtC3H,EAAM+c,cAAW1V,EACjBrH,EAAMie,gBAAgBtW,EAAOkT,SAC7B7a,EAAM0c,oBAAqB,EACvB/U,EAAOmT,YACP9a,EAAM2c,sBAAuB,GAEjC3c,EAAM0d,sBACV,GAAG1d,EAAMyd,cACb,GACJ,EACAjB,EAAW/b,UAAU4d,gBAAkB,WACnC,IAAIre,EAAQE,KACRub,EAAYF,GAA8Brb,KAAK8c,iBAC/CrV,EAAS,IAAIiT,GAAsB1a,KAAKuc,aAAcvc,KAAKkd,MAAMlK,QAEjEtV,EAAMsC,KAAK4c,WACf5c,KAAKqe,eAAc,SAAU7M,EAAWM,GACpC,IAAIE,EACJ,IACIA,EAAcsJ,GAAwBxb,EAAMmd,KAAKyB,UAAW5e,EAAMmd,KAAKsB,QAAS7gB,EAAKoC,EAAMod,MAAO3B,EAAWzb,EAAMqd,UAAW1V,EAAQ3H,EAAM+d,wBAChJ,CACA,MAAO7gB,GAGH,OAFA8C,EAAM6c,OAAS3f,OACf8C,EAAM2d,YAAY,QAEtB,CACA,IAAIqB,EAAgBhf,EAAMmd,KAAKsB,QAAQK,aAAa5M,EAAaR,EAAWM,GAC5EhS,EAAM+c,SAAWiC,EACjBA,EAAc5T,aAAa3N,MAAK,SAAUwhB,GACtCjf,EAAMkf,sBACNlf,EAAM+c,cAAW1V,EACjBrH,EAAMie,gBAAgBgB,EAAUpE,SAC5BoE,EAAUnE,WACV9a,EAAMkW,UAAY+I,EAAU3J,SAC5BtV,EAAM2d,YAAY,YAGlB3d,EAAM0d,sBAEd,GAAG1d,EAAMyd,cACb,GACJ,EACAjB,EAAW/b,UAAUye,oBAAsB,WACvC,IAAIC,EAAc5D,GAA8Brb,KAAK8c,iBAEjDmC,EAAc,WACdjf,KAAK8c,kBAAoB,EAEjC,EACAR,EAAW/b,UAAU2d,eAAiB,WAClC,IAAIpe,EAAQE,KACZA,KAAKqe,eAAc,SAAU7M,EAAWM,GACpC,IAAIE,EAAckH,GAAcpZ,EAAMmd,KAAKsB,QAASze,EAAMmd,KAAKyB,UAAW5e,EAAMqd,WAC5E+B,EAAkBpf,EAAMmd,KAAKsB,QAAQK,aAAa5M,EAAaR,EAAWM,GAC9EhS,EAAM+c,SAAWqC,EACjBA,EAAgBhU,aAAa3N,MAAK,SAAU6X,GACxCtV,EAAM+c,cAAW1V,EACjBrH,EAAMkW,UAAYZ,EAClBtV,EAAM2d,YAAY,UACtB,GAAG3d,EAAM4d,sBACb,GACJ,EACApB,EAAW/b,UAAU6d,eAAiB,WAClC,IAAIte,EAAQE,KACZA,KAAKqe,eAAc,SAAU7M,EAAWM,GACpC,IAAIE,EAAciI,GAAgBna,EAAMmd,KAAKsB,QAASze,EAAMmd,KAAKyB,UAAW5e,EAAMqd,UAAWrd,EAAMod,MAAOpd,EAAMkW,WAC5GmJ,EAAmBrf,EAAMmd,KAAKsB,QAAQK,aAAa5M,EAAaR,EAAWM,GAC/EhS,EAAM+c,SAAWsC,EACjBA,EAAiBjU,aAAa3N,MAAK,SAAU6X,GACzCtV,EAAM+c,cAAW1V,EACjBrH,EAAMkW,UAAYZ,EAClBtV,EAAMie,gBAAgBje,EAAMod,MAAMlK,QAClClT,EAAM2d,YAAY,UACtB,GAAG3d,EAAMyd,cACb,GACJ,EACAjB,EAAW/b,UAAUwd,gBAAkB,SAAUqB,GAC7C,IAAIC,EAAMrf,KAAKuc,aACfvc,KAAKuc,aAAe6C,EAIhBpf,KAAKuc,eAAiB8C,GACtBrf,KAAKsf,kBAEb,EACAhD,EAAW/b,UAAUkd,YAAc,SAAUxX,GACzC,GAAIjG,KAAKsd,SAAWrX,EAGpB,OAAQA,GACJ,IAAK,YAIDjG,KAAKsd,OAASrX,OACQkB,IAAlBnH,KAAK6c,UACL7c,KAAK6c,SAAS1R,SAElB,MACJ,IAAK,UAGDnL,KAAKsd,OAASrX,OACQkB,IAAlBnH,KAAK6c,UACL7c,KAAK6c,SAAS1R,SAElB,MACJ,IAAK,UAID,IAAIoU,EAA4B,WAAhBvf,KAAKsd,OACrBtd,KAAKsd,OAASrX,EACVsZ,IACAvf,KAAKsf,mBACLtf,KAAK4d,UAET,MACJ,IAAK,SAGD5d,KAAKsd,OAASrX,EACdjG,KAAKsf,mBACL,MACJ,IAAK,WAIDtf,KAAK2c,OAASpb,IACdvB,KAAKsd,OAASrX,EACdjG,KAAKsf,mBACL,MACJ,IAAK,QAKDtf,KAAKsd,OAASrX,EACdjG,KAAKsf,mBACL,MACJ,IAAK,UAKDtf,KAAKsd,OAASrX,EACdjG,KAAKsf,mBACL,MAEZ,EACAhD,EAAW/b,UAAUid,qBAAuB,WACxC,OAAQxd,KAAKsd,QACT,IAAK,UACDtd,KAAKyd,YAAY,UACjB,MACJ,IAAK,YACDzd,KAAKyd,YAAY,YACjB,MACJ,IAAK,UACDzd,KAAK4d,SACL,MAEZ,EACAvd,OAAOI,eAAe6b,EAAW/b,UAAW,WAAY,CAIpDG,IAAK,WACD,IAAI8e,EAAgBxZ,EAA+BhG,KAAKsd,QACxD,MAAO,CACHmC,iBAAkBzf,KAAKuc,aACvBmD,WAAY1f,KAAKkd,MAAMlK,OACvB/M,MAAOuZ,EACPpK,SAAUpV,KAAKgW,UACf2J,KAAM3f,KACNhE,IAAKgE,KAAKid,KAElB,EACArc,YAAY,EACZC,cAAc,IAmBlByb,EAAW/b,UAAUzE,GAAK,SAAUqX,EAAM6I,EAAgBne,EAAO+hB,GAC7D,IAAI9f,EAAQE,KACRoc,EAAW,IAAIL,GAASC,EAAgBne,EAAO+hB,GAEnD,OADA5f,KAAK6f,aAAazD,GACX,WACHtc,EAAMggB,gBAAgB1D,EAC1B,CACJ,EAOAE,EAAW/b,UAAUhD,KAAO,SAAUwiB,EAAaC,GAG/C,OAAOhgB,KAAK2d,SAASpgB,KAAKwiB,EAAaC,EAC3C,EAIA1D,EAAW/b,UAAU0f,MAAQ,SAAUD,GACnC,OAAOhgB,KAAKzC,KAAK,KAAMyiB,EAC3B,EAIA1D,EAAW/b,UAAUsf,aAAe,SAAUzD,GAC1Cpc,KAAK0c,WAAW9f,KAAKwf,GACrBpc,KAAKkgB,gBAAgB9D,EACzB,EAIAE,EAAW/b,UAAUuf,gBAAkB,SAAU1D,GAC7C,IAAIne,EAAI+B,KAAK0c,WAAWzY,QAAQmY,IACrB,IAAPne,GACA+B,KAAK0c,WAAW/d,OAAOV,EAAG,EAElC,EACAqe,EAAW/b,UAAU+e,iBAAmB,WACpC,IAAIxf,EAAQE,KACZA,KAAKmgB,iBACL,IAAIC,EAAYpgB,KAAK0c,WAAWnT,QAChC6W,EAAUlM,SAAQ,SAAUkI,GACxBtc,EAAMogB,gBAAgB9D,EAC1B,GACJ,EACAE,EAAW/b,UAAU4f,eAAiB,WAClC,QAAsBhZ,IAAlBnH,KAAK+c,SAAwB,CAC7B,IAAIsD,GAAY,EAChB,OAAQra,EAA+BhG,KAAKsd,SACxC,KAAK5X,EAAUG,QACX,GAAM7F,KAAK+c,SAASuD,KAAK,KAAMtgB,KAAKugB,UAApC,GACA,MACJ,KAAK7a,EAAUI,SACf,KAAKJ,EAAUK,MACX,IAAIya,EAASxgB,KAAKgd,QAClB,GAAMwD,EAAOF,KAAK,KAAMtgB,KAAK2c,QAA7B,GACA,MACJ,QACI0D,GAAY,EACZ,MAEJA,IACArgB,KAAK+c,cAAW5V,EAChBnH,KAAKgd,aAAU7V,EAEvB,CACJ,EACAmV,EAAW/b,UAAU2f,gBAAkB,SAAU9D,GAC7C,IAAIoD,EAAgBxZ,EAA+BhG,KAAKsd,QACxD,OAAQkC,GACJ,KAAK9Z,EAAUC,QACf,KAAKD,EAAUE,OACPwW,EAASD,MACT,GAAMC,EAASD,KAAKmE,KAAKlE,EAAUpc,KAAKugB,UAAxC,GAEJ,MACJ,KAAK7a,EAAUG,QACPuW,EAASH,UACT,GAAMG,EAASH,SAASqE,KAAKlE,GAA7B,GAEJ,MACJ,KAAK1W,EAAUI,SACf,KAAKJ,EAAUK,MACPqW,EAASve,OACT,GAAMue,EAASve,MAAMyiB,KAAKlE,EAAUpc,KAAK2c,QAAzC,GAEJ,MACJ,QAEQP,EAASve,OACT,GAAMue,EAASve,MAAMyiB,KAAKlE,EAAUpc,KAAK2c,QAAzC,GAGhB,EAKAL,EAAW/b,UAAUkgB,OAAS,WAC1B,IAAIhd,EAAwB,WAAhBzD,KAAKsd,QACG,YAAhBtd,KAAKsd,OAIT,OAHI7Z,GACAzD,KAAKyd,YAAY,WAEdha,CACX,EAKA6Y,EAAW/b,UAAUmgB,MAAQ,WACzB,IAAIjd,EAAwB,YAAhBzD,KAAKsd,OAIjB,OAHI7Z,GACAzD,KAAKyd,YAAY,WAEdha,CACX,EAMA6Y,EAAW/b,UAAU4K,OAAS,WAC1B,IAAI1H,EAAwB,YAAhBzD,KAAKsd,QACG,YAAhBtd,KAAKsd,OAIT,OAHI7Z,GACAzD,KAAKyd,YAAY,aAEdha,CACX,EACO6Y,CACX,CA9d+B,GA4f3BqE,GAA2B,WAC3B,SAASA,EAAUC,EAAU1X,GACzBlJ,KAAK4gB,SAAWA,EAEZ5gB,KAAK0e,UADLxV,aAAoBX,EACHW,EAGAX,EAASU,YAAYC,EAAU0X,EAAS7X,KAEjE,CAwFA,OAlFA4X,EAAUpgB,UAAU+G,SAAW,WAC3B,MAAO,QAAUtH,KAAK0e,UAAUxd,OAAS,IAAMlB,KAAK0e,UAAU1d,IAClE,EACA2f,EAAUpgB,UAAUsgB,QAAU,SAAUvK,EAASpN,GAC7C,OAAO,IAAIyX,EAAUrK,EAASpN,EAClC,EACA7I,OAAOI,eAAekgB,EAAUpgB,UAAW,OAAQ,CAI/CG,IAAK,WACD,IAAIwI,EAAW,IAAIX,EAASvI,KAAK0e,UAAUxd,OAAQ,IACnD,OAAOlB,KAAK6gB,QAAQ7gB,KAAK4gB,SAAU1X,EACvC,EACAtI,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAekgB,EAAUpgB,UAAW,SAAU,CAIjDG,IAAK,WACD,OAAOV,KAAK0e,UAAUxd,MAC1B,EACAN,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAekgB,EAAUpgB,UAAW,WAAY,CAInDG,IAAK,WACD,OAAOV,KAAK0e,UAAU1d,IAC1B,EACAJ,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAekgB,EAAUpgB,UAAW,OAAQ,CAK/CG,IAAK,WACD,OAAOwU,GAAclV,KAAK0e,UAAU1d,KACxC,EACAJ,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAekgB,EAAUpgB,UAAW,UAAW,CAIlDG,IAAK,WACD,OAAOV,KAAK4gB,QAChB,EACAhgB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAekgB,EAAUpgB,UAAW,SAAU,CAKjDG,IAAK,WACD,IAAIiU,EAAU,GAAO3U,KAAK0e,UAAU1d,MACpC,GAAgB,OAAZ2T,EACA,OAAO,KAEX,IAAIzL,EAAW,IAAIX,EAASvI,KAAK0e,UAAUxd,OAAQyT,GACnD,OAAO,IAAIgM,EAAU3gB,KAAK4gB,SAAU1X,EACxC,EACAtI,YAAY,EACZC,cAAc,IAKlB8f,EAAUpgB,UAAUugB,aAAe,SAAU7e,GACzC,GAA4B,KAAxBjC,KAAK0e,UAAU1d,KACf,MAAMgB,EAAqBC,EAEnC,EACO0e,CACX,CAlG8B;;;;;;;;;;;;;;;;GA4G9B,SAASI,GAAuB/kB,EAAKG,EAAMiZ,GAEvC,OADApZ,EAAI8kB,aAAa,wBACV,IAAIxE,GAAWtgB,EAAK,IAAI8W,GAAQ3W,GAAOiZ,EAClD,CAoBA,SAAS4L,GAAUhlB,GACf,IAAIilB,EAAc,CACdpJ,SAAU,GACVC,MAAO,IAEX,OAAOoJ,GAAcllB,EAAKilB,GAAa1jB,MAAK,WAAc,OAAO0jB,CAAa,GAClF,CAOA,SAASC,GAAcllB,EAAKilB,EAAa3H,GACrC,OAAO,QAAUtZ,UAAM,OAAQ,GAAQ,WACnC,IAAImhB,EAAKC,EACLpJ,EAAIG,EACR,OAAO,QAAYnY,MAAM,SAAUzE,GAC/B,OAAQA,EAAG8lB,OACP,KAAK,EAKD,OAJAF,EAAM,CAEF7H,UAAWA,GAER,CAAC,EAAagI,GAAOtlB,EAAKmlB,IACrC,KAAK,EAID,OAHAC,EAAW7lB,EAAGgmB,QACbvJ,EAAKiJ,EAAYpJ,UAAUjb,KAAKsP,MAAM8L,EAAIoJ,EAASvJ,WACnDM,EAAK8I,EAAYnJ,OAAOlb,KAAKsP,MAAMiM,EAAIiJ,EAAStJ,OACjB,MAA1BsJ,EAASrJ,cAA+B,CAAC,EAAa,GACrD,CAAC,EAAamJ,GAAcllB,EAAKilB,EAAaG,EAASrJ,gBAClE,KAAK,EACDxc,EAAGgmB,OACHhmB,EAAG8lB,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,GAExB,GACJ,GACJ,CAuBA,SAASC,GAAOtlB,EAAKwlB,GACjB,OAAO,QAAUxhB,UAAM,OAAQ,GAAQ,WACnC,IAAIyhB,EAAIzP,EACR,OAAO,QAAYhS,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAWD,OAVe,MAAXG,GACkC,kBAAvBA,EAAQjI,YACf5L,GAAe,qBACC,EACA,IAAM6T,EAAQjI,YAGtCkI,EAAKD,GAAW,CAAC,EACjBxP,EAAcoH,GAAOpd,EAAIuiB,QAASviB,EAAI0iB,UACtB,IAAK+C,EAAGnI,UAAWmI,EAAGlI,YAC/B,CAAC,EAAavd,EAAIuiB,QAAQmD,sBAAsB1P,IAC3D,KAAK,EAAG,MAAO,CAAC,EAAegG,EAAGuJ,OAAQrW,cAElD,GACJ,GACJ,CAQA,SAASyW,GAAc3lB,GACnB,OAAO,QAAUgE,UAAM,OAAQ,GAAQ,WACnC,IAAIgS,EACJ,OAAO,QAAYhS,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAGD,OAFArlB,EAAI8kB,aAAa,eACjB9O,EAAckH,GAAcld,EAAIuiB,QAASviB,EAAI0iB,UAAW7I,MACjD,CAAC,EAAa7Z,EAAIuiB,QAAQmD,sBAAsB1P,IAC3D,KAAK,EAAG,MAAO,CAAC,EAAegG,EAAGuJ,OAAQrW,cAElD,GACJ,GACJ,CAYA,SAAS0W,GAAiB5lB,EAAKoZ,GAC3B,OAAO,QAAUpV,UAAM,OAAQ,GAAQ,WACnC,IAAIgS,EACJ,OAAO,QAAYhS,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAGD,OAFArlB,EAAI8kB,aAAa,kBACjB9O,EAAc0H,GAAiB1d,EAAIuiB,QAASviB,EAAI0iB,UAAWtJ,EAAUS,MAC9D,CAAC,EAAa7Z,EAAIuiB,QAAQmD,sBAAsB1P,IAC3D,KAAK,EAAG,MAAO,CAAC,EAAegG,EAAGuJ,OAAQrW,cAElD,GACJ,GACJ,CAOA,SAAS2W,GAAiB7lB,GACtB,OAAO,QAAUgE,UAAM,OAAQ,GAAQ,WACnC,IAAIgS,EACJ,OAAO,QAAYhS,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAGD,OAFArlB,EAAI8kB,aAAa,kBACjB9O,EAAcyH,GAAezd,EAAIuiB,QAASviB,EAAI0iB,UAAW7I,MAClD,CAAC,EAAa7Z,EAAIuiB,QAAQmD,sBAAsB1P,IAC3D,KAAK,EAAG,MAAO,CAAC,EAAegG,EAAGuJ,OACzBrW,aACA3N,MAAK,SAAUG,GAChB,GAAY,OAARA,EACA,MAAMmE,IAEV,OAAOnE,CACX,KAEZ,GACJ,GACJ,CAOA,SAASokB,GAAe9lB,GACpB,OAAO,QAAUgE,UAAM,OAAQ,GAAQ,WACnC,IAAIgS,EACJ,OAAO,QAAYhS,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAGD,OAFArlB,EAAI8kB,aAAa,gBACjB9O,EAAc2H,GAAe3d,EAAIuiB,QAASviB,EAAI0iB,WACvC,CAAC,EAAa1iB,EAAIuiB,QAAQmD,sBAAsB1P,IAC3D,KAAK,EAAG,MAAO,CAAC,EAAegG,EAAGuJ,OAAQrW,cAElD,GACJ,GACJ,CAWA,SAAS6W,GAAY/lB,EAAK6Y,GACtB,IAAIF,EAAUC,GAAM5Y,EAAI0iB,UAAU1d,KAAM6T,GACpC3L,EAAW,IAAIX,EAASvM,EAAI0iB,UAAUxd,OAAQyT,GAClD,OAAO,IAAIgM,GAAU3kB,EAAIuiB,QAASrV,EACtC;;;;;;;;;;;;;;;;GAkBA,SAAS8Y,GAAMhhB,GACX,MAAO,kBAAkBihB,KAAKjhB,EAClC,CAIA,SAASkhB,GAAW5L,EAAS5Y,GACzB,OAAO,IAAIijB,GAAUrK,EAAS5Y,EAClC,CAKA,SAASykB,GAAYnmB,EAAKgF,GACtB,GAAIhF,aAAeomB,GAAqB,CACpC,IAAI9L,EAAUta,EACd,GAAuB,MAAnBsa,EAAQ+L,QACR,MAAM3gB,IAEV,IAAIwW,EAAY,IAAIyI,GAAUrK,EAASA,EAAQ+L,SAC/C,OAAY,MAARrhB,EACOmhB,GAAYjK,EAAWlX,GAGvBkX,CAEf,CAGI,YAAa/Q,IAATnG,EACO+gB,GAAY/lB,EAAKgF,GAGjBhF,CAGnB,CACA,SAASsmB,GAAMC,EAAcC,GACzB,GAAIA,GAAaR,GAAMQ,GAAY,CAC/B,GAAID,aAAwBH,GACxB,OAAOF,GAAWK,EAAcC,GAGhC,MAAM1gB,EAAgB,2EAE9B,CAEI,OAAOqgB,GAAYI,EAAcC,EAEzC,CACA,SAASC,GAAc1Z,EAAM2Z,GACzB,IAAI5Z,EAA0B,OAAX4Z,QAA8B,IAAXA,OAAoB,EAASA,EAAOnjB,GAC1E,OAAoB,MAAhBuJ,EACO,KAEJP,EAASM,mBAAmBC,EAAcC,EACrD,CACA,SAAS4Z,GAAyBpE,EAASxV,EAAM6Z,EAAMpB,QACnC,IAAZA,IAAsBA,EAAU,CAAC,GACrCjD,EAAQxV,KAAO,UAAYA,EAAO,IAAM6Z,EACxC,IAAIC,EAAgBrB,EAAQqB,cACxBA,IACAtE,EAAQuE,mBACqB,kBAAlBD,EACDA,GACA,QAAoBA,EAAetE,EAAQwE,IAAIvB,QAAQwB,WAEzE,CAMA,IAAIZ,GAAqC,WACrC,SAASA,EAITW,EAAKE,EAILC,EAIAC,EAAOC,EAAMC,GACTrjB,KAAK+iB,IAAMA,EACX/iB,KAAKijB,cAAgBA,EACrBjjB,KAAKkjB,kBAAoBA,EACzBljB,KAAKmjB,MAAQA,EACbnjB,KAAKojB,KAAOA,EACZpjB,KAAKqjB,iBAAmBA,EACxBrjB,KAAKqiB,QAAU,KAOfriB,KAAKsjB,MAAQhkB,EACbU,KAAKujB,OAAS,KACdvjB,KAAKwjB,UAAW,EAChBxjB,KAAKyjB,uBAAyBjkB,EAC9BQ,KAAK0jB,oBAAsBjkB,EAC3BO,KAAK2jB,UAAY,IAAIC,IAEjB5jB,KAAKqiB,QADG,MAARe,EACe7a,EAASM,mBAAmBua,EAAMpjB,KAAKsjB,OAGvCb,GAAcziB,KAAKsjB,MAAOtjB,KAAK+iB,IAAIvB,QAE1D,CAsJA,OArJAnhB,OAAOI,eAAe2hB,EAAoB7hB,UAAW,OAAQ,CACzDG,IAAK,WACD,OAAOV,KAAKsjB,KAChB,EAMA3iB,IAAK,SAAUoI,GACX/I,KAAKsjB,MAAQva,EACI,MAAb/I,KAAKojB,KACLpjB,KAAKqiB,QAAU9Z,EAASM,mBAAmB7I,KAAKojB,KAAMra,GAGtD/I,KAAKqiB,QAAUI,GAAc1Z,EAAM/I,KAAK+iB,IAAIvB,QAEpD,EACA5gB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe2hB,EAAoB7hB,UAAW,qBAAsB,CAIvEG,IAAK,WACD,OAAOV,KAAK0jB,mBAChB,EACA/iB,IAAK,SAAUkjB,GACXlW,GAAe,OACA,EACCwI,OAAO2N,kBAAmBD,GAC1C7jB,KAAK0jB,oBAAsBG,CAC/B,EACAjjB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe2hB,EAAoB7hB,UAAW,wBAAyB,CAK1EG,IAAK,WACD,OAAOV,KAAKyjB,sBAChB,EACA9iB,IAAK,SAAUkjB,GACXlW,GAAe,OACA,EACCwI,OAAO2N,kBAAmBD,GAC1C7jB,KAAKyjB,uBAAyBI,CAClC,EACAjjB,YAAY,EACZC,cAAc,IAElBuhB,EAAoB7hB,UAAUie,cAAgB,WAC1C,OAAO,QAAUxe,UAAM,OAAQ,GAAQ,WACnC,IAAI+jB,EAAMC,EACV,OAAO,QAAYhkB,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EACD,OAAIrhB,KAAK8iB,mBACE,CAAC,EAAc9iB,KAAK8iB,qBAE/BiB,EAAO/jB,KAAKijB,cAAcgB,aAAa,CAAEC,UAAU,IAC9CH,EACE,CAAC,EAAaA,EAAKI,YADR,CAAC,EAAa,IAEpC,KAAK,EAED,GADAH,EAAYhM,EAAGuJ,OACG,OAAdyC,EACA,MAAO,CAAC,EAAcA,EAAUI,aAEpCpM,EAAGqJ,MAAQ,EACf,KAAK,EAAG,MAAO,CAAC,EAAc,MAEtC,GACJ,GACJ,EACAe,EAAoB7hB,UAAUke,kBAAoB,WAC9C,OAAO,QAAUze,UAAM,OAAQ,GAAQ,WACnC,IAAIqkB,EAAU7mB,EACd,OAAO,QAAYwC,MAAM,SAAUgY,GAC/B,OAAQA,EAAGqJ,OACP,KAAK,EAED,OADAgD,EAAWrkB,KAAKkjB,kBAAkBe,aAAa,CAAEC,UAAU,IACtDG,EACE,CAAC,EAAaA,EAASF,YADR,CAAC,EAAa,GAExC,KAAK,EAMD,OALA3mB,EAASwa,EAAGuJ,OAKL,CAAC,EAAc/jB,EAAO2Z,OACjC,KAAK,EAAG,MAAO,CAAC,EAAc,MAEtC,GACJ,GACJ,EAIAiL,EAAoB7hB,UAAU+jB,QAAU,WAMpC,OALKtkB,KAAKwjB,WACNxjB,KAAKwjB,UAAW,EAChBxjB,KAAK2jB,UAAUzP,SAAQ,SAAUqQ,GAAW,OAAOA,EAAQpZ,QAAU,IACrEnL,KAAK2jB,UAAUa,SAEZ/d,QAAQC,SACnB,EAKA0b,EAAoB7hB,UAAUiW,sBAAwB,SAAUnN,GAC5D,OAAO,IAAIsX,GAAU3gB,KAAMqJ,EAC/B,EAKA+Y,EAAoB7hB,UAAUqe,aAAe,SAAU5M,EAAaR,EAAWM,GAC3E,IAAIhS,EAAQE,KACZ,GAAKA,KAAKwjB,SAQN,OAAO,IAAIzY,EAAYhJ,KAPvB,IAAI0iB,EAAY1S,GAAYC,EAAahS,KAAKujB,OAAQ/R,EAAWM,EAAe9R,KAAKmjB,MAAOnjB,KAAKqjB,kBAIjG,OAHArjB,KAAK2jB,UAAUe,IAAID,GAEnBA,EAAUvZ,aAAa3N,MAAK,WAAc,OAAOuC,EAAM6jB,UAAUgB,OAAOF,EAAY,IAAG,WAAc,OAAO3kB,EAAM6jB,UAAUgB,OAAOF,EAAY,IACxIA,CAKf,EACArC,EAAoB7hB,UAAUmhB,sBAAwB,SAAU1P,GAC5D,OAAO,QAAUhS,UAAM,OAAQ,GAAQ,WACnC,IAAIgY,EAAIxG,EAAWM,EACnB,OAAO,QAAY9R,MAAM,SAAUmY,GAC/B,OAAQA,EAAGkJ,OACP,KAAK,EAAG,MAAO,CAAC,EAAa5a,QAAQ6X,IAAI,CACjCte,KAAKwe,gBACLxe,KAAKye,uBAEb,KAAK,EAED,OADAzG,EAAKG,EAAGoJ,OAAQ/P,EAAYwG,EAAG,GAAIlG,EAAgBkG,EAAG,GAC/C,CAAC,EAAchY,KAAK4e,aAAa5M,EAAaR,EAAWM,IAE5E,GACJ,GACJ,EACOsQ,CACX,CA9LwC;;;;;;;;;;;;;;;;GAyNxC,SAASwC,GAAqB5oB,EAAKG,EAAMiZ,GAErC,OADApZ,GAAM,QAAmBA,GAClB+kB,GAAuB/kB,EAAKG,EAAMiZ,EAC7C,CAQA,SAASyP,GAAY7oB,GAEjB,OADAA,GAAM,QAAmBA,GAClB2lB,GAAc3lB,EACzB,CAUA,SAAS8oB,GAAe9oB,EAAKoZ,GAEzB,OADApZ,GAAM,QAAmBA,GAClB4lB,GAAiB5lB,EAAKoZ,EACjC,CAuBA,SAAS2P,GAAK/oB,EAAKwlB,GAEf,OADAxlB,GAAM,QAAmBA,GAClBslB,GAAOtlB,EAAKwlB,EACvB,CAoBA,SAASwD,GAAQhpB,GAEb,OADAA,GAAM,QAAmBA,GAClBglB,GAAUhlB,EACrB,CAQA,SAASipB,GAAejpB,GAEpB,OADAA,GAAM,QAAmBA,GAClB6lB,GAAiB7lB,EAC5B,CAOA,SAASkpB,GAAalpB,GAElB,OADAA,GAAM,QAAmBA,GAClB8lB,GAAe9lB,EAC1B,CACA,SAASA,GAAIumB,EAAcC,GAEvB,OADAD,GAAe,QAAmBA,GAC3BD,GAAMC,EAAcC,EAC/B,CAIA,SAAS2C,GAAUnpB,EAAK6Y,GACpB,OAAOkN,GAAY/lB,EAAK6Y,EAC5B,CAUA,SAASuQ,GAAuB7G,EAASxV,EAAM6Z,EAAMpB,QACjC,IAAZA,IAAsBA,EAAU,CAAC,GACrCmB,GAAyBpE,EAASxV,EAAM6Z,EAAMpB,EAClD;;;;;;;;;;;;;;;;GAkBA,IAAI6D,GAA0C,WAC1C,SAASA,EAAyBC,EAAW3F,EAAM3jB,GAC/CgE,KAAKslB,UAAYA,EACjBtlB,KAAK2f,KAAOA,EACZ3f,KAAKhE,IAAMA,CACf,CA6BA,OA5BAqE,OAAOI,eAAe4kB,EAAyB9kB,UAAW,mBAAoB,CAC1EG,IAAK,WACD,OAAOV,KAAKslB,UAAU7F,gBAC1B,EACA7e,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe4kB,EAAyB9kB,UAAW,WAAY,CAClEG,IAAK,WACD,OAAOV,KAAKslB,UAAUlQ,QAC1B,EACAxU,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe4kB,EAAyB9kB,UAAW,QAAS,CAC/DG,IAAK,WACD,OAAOV,KAAKslB,UAAUrf,KAC1B,EACArF,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAe4kB,EAAyB9kB,UAAW,aAAc,CACpEG,IAAK,WACD,OAAOV,KAAKslB,UAAU5F,UAC1B,EACA9e,YAAY,EACZC,cAAc,IAEXwkB,CACX,CAnC6C,GAqDzCE,GAAkC,WAClC,SAASA,EAAiBD,EAAWrI,GACjCjd,KAAKslB,UAAYA,EACjBtlB,KAAKid,KAAOA,EACZjd,KAAKmL,OAASnL,KAAKslB,UAAUna,OAAOmV,KAAKtgB,KAAKslB,WAC9CtlB,KAAKigB,MAAQjgB,KAAKslB,UAAUrF,MAAMK,KAAKtgB,KAAKslB,WAC5CtlB,KAAK0gB,MAAQ1gB,KAAKslB,UAAU5E,MAAMJ,KAAKtgB,KAAKslB,WAC5CtlB,KAAKygB,OAASzgB,KAAKslB,UAAU7E,OAAOH,KAAKtgB,KAAKslB,UAClD,CAuCA,OAtCAjlB,OAAOI,eAAe8kB,EAAiBhlB,UAAW,WAAY,CAC1DG,IAAK,WACD,OAAO,IAAI2kB,GAAyBrlB,KAAKslB,UAAU/E,SAAUvgB,KAAMA,KAAKid,KAC5E,EACArc,YAAY,EACZC,cAAc,IAElB0kB,EAAiBhlB,UAAUhD,KAAO,SAAUwiB,EAAaC,GACrD,IAAIlgB,EAAQE,KACZ,OAAOA,KAAKslB,UAAU/nB,MAAK,SAAUgjB,GACjC,GAAIR,EACA,OAAOA,EAAY,IAAIsF,GAAyB9E,EAAUzgB,EAAOA,EAAMmd,MAE/E,GAAG+C,EACP,EACAuF,EAAiBhlB,UAAUzE,GAAK,SAAUqX,EAAM6I,EAAgBne,EAAO+hB,GACnE,IAAI9f,EAAQE,KACRwlB,OAAwBre,EAmB5B,OAlBM6U,IAEEwJ,EAD0B,oBAAnBxJ,EACiB,SAAUyJ,GAC9B,OAAOzJ,EAAe,IAAIqJ,GAAyBI,EAAc3lB,EAAOA,EAAMmd,MAClF,EAGwB,CACpBd,KAAQH,EAAeG,KACjB,SAAUsJ,GACR,OAAOzJ,EAAeG,KAAK,IAAIkJ,GAAyBI,EAAc3lB,EAAOA,EAAMmd,MACvF,OACE9V,EACN8U,SAAUD,EAAeC,eAAY9U,EACrCtJ,MAAOme,EAAene,YAASsJ,IAIpCnH,KAAKslB,UAAUxpB,GAAGqX,EAAMqS,EAAuB3nB,QAASsJ,EAAWyY,QAAazY,EAC3F,EACOoe,CACX,CAhDqC,GAkDjCG,GAAkC,WAClC,SAASA,EAAiBJ,EAAW1E,GACjC5gB,KAAKslB,UAAYA,EACjBtlB,KAAK4gB,SAAWA,CACpB,CAwBA,OAvBAvgB,OAAOI,eAAeilB,EAAiBnlB,UAAW,WAAY,CAC1DG,IAAK,WACD,IAAIZ,EAAQE,KACZ,OAAOA,KAAKslB,UAAUzN,SAAS/D,KAAI,SAAU9X,GAAO,OAAO,IAAI2pB,GAAgB3pB,EAAK8D,EAAM8gB,SAAW,GACzG,EACAhgB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAeilB,EAAiBnlB,UAAW,QAAS,CACvDG,IAAK,WACD,IAAIZ,EAAQE,KACZ,OAAOA,KAAKslB,UAAUxN,MAAMhE,KAAI,SAAU9X,GAAO,OAAO,IAAI2pB,GAAgB3pB,EAAK8D,EAAM8gB,SAAW,GACtG,EACAhgB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAeilB,EAAiBnlB,UAAW,gBAAiB,CAC/DG,IAAK,WACD,OAAOV,KAAKslB,UAAUvN,eAAiB,IAC3C,EACAnX,YAAY,EACZC,cAAc,IAEX6kB,CACX,CA7BqC,GA+CjCC,GAAiC,WACjC,SAASA,EAAgBL,EAAW/G,GAChCve,KAAKslB,UAAYA,EACjBtlB,KAAKue,QAAUA,CACnB,CAuKA,OAtKAle,OAAOI,eAAeklB,EAAgBplB,UAAW,OAAQ,CACrDG,IAAK,WACD,OAAOV,KAAKslB,UAAUrjB,IAC1B,EACArB,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAeklB,EAAgBplB,UAAW,SAAU,CACvDG,IAAK,WACD,OAAOV,KAAKslB,UAAUpkB,MAC1B,EACAN,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAeklB,EAAgBplB,UAAW,WAAY,CACzDG,IAAK,WACD,OAAOV,KAAKslB,UAAU1P,QAC1B,EACAhV,YAAY,EACZC,cAAc,IAElB8kB,EAAgBplB,UAAU+G,SAAW,WACjC,OAAOtH,KAAKslB,UAAUhe,UAC1B,EAMAqe,EAAgBplB,UAAUqU,MAAQ,SAAUC,GACxC,IAAIqD,EAAYiN,GAAUnlB,KAAKslB,UAAWzQ,GAC1C,OAAO,IAAI8Q,EAAgBzN,EAAWlY,KAAKue,QAC/C,EACAle,OAAOI,eAAeklB,EAAgBplB,UAAW,OAAQ,CACrDG,IAAK,WACD,OAAO,IAAIilB,EAAgB3lB,KAAKslB,UAAUM,KAAM5lB,KAAKue,QACzD,EACA3d,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAeklB,EAAgBplB,UAAW,SAAU,CAKvDG,IAAK,WACD,IAAIwX,EAAYlY,KAAKslB,UAAUO,OAC/B,OAAiB,MAAb3N,EACO,KAEJ,IAAIyN,EAAgBzN,EAAWlY,KAAKue,QAC/C,EACA3d,YAAY,EACZC,cAAc,IAQlB8kB,EAAgBplB,UAAUulB,IAAM,SAAU3pB,EAAMiZ,GAE5C,OADApV,KAAK8gB,aAAa,OACX,IAAIyE,GAAiBX,GAAqB5kB,KAAKslB,UAAWnpB,EAAMiZ,GAAWpV,KACtF,EAQA2lB,EAAgBplB,UAAUwlB,UAAY,SAAUrpB,EAAOyF,EAAQiT,QAC5C,IAAXjT,IAAqBA,EAASK,EAAaC,KAC/CzC,KAAK8gB,aAAa,aAClB,IAAI3kB,EAAO4G,EAAeZ,EAAQzF,GAC9Bsd,GAAgB,QAAS,CAAC,EAAG5E,GAIjC,OAHoC,MAAhC4E,EAAc,gBAA8C,MAApB7d,EAAK2G,cAC7CkX,EAAc,eAAiB7d,EAAK2G,aAEjC,IAAIyiB,GAAiB,IAAIjJ,GAAWtc,KAAKslB,UAAW,IAAIxS,GAAQ3W,EAAKA,MAAM,GAAO6d,GAAgBha,KAC7G,EAkBA2lB,EAAgBplB,UAAUykB,QAAU,WAChC,IAAIllB,EAAQE,KACZ,OAAOglB,GAAQhlB,KAAKslB,WAAW/nB,MAAK,SAAUyoB,GAAK,OAAO,IAAIN,GAAiBM,EAAGlmB,EAAMye,QAAU,GACtG,EAoBAoH,EAAgBplB,UAAUwkB,KAAO,SAAUvD,GACvC,IAAI1hB,EAAQE,KACZ,OAAO+kB,GAAK/kB,KAAKslB,UAAW9D,QAAWra,GAAW5J,MAAK,SAAUyoB,GAAK,OAAO,IAAIN,GAAiBM,EAAGlmB,EAAMye,QAAU,GACzH,EAMAoH,EAAgBplB,UAAUskB,YAAc,WACpC,OAAOA,GAAY7kB,KAAKslB,UAC5B,EAUAK,EAAgBplB,UAAUukB,eAAiB,SAAU1P,GACjD,OAAO0P,GAAe9kB,KAAKslB,UAAWlQ,EAC1C,EAKAuQ,EAAgBplB,UAAU0kB,eAAiB,WACvC,OAAOA,GAAejlB,KAAKslB,UAC/B,EAKAK,EAAgBplB,UAAUokB,OAAS,WAE/B,OADA3kB,KAAK8gB,aAAa,UACXoE,GAAallB,KAAKslB,UAC7B,EACAK,EAAgBplB,UAAUugB,aAAe,SAAU7e,GAC/C,GAAsC,KAAlCjC,KAAKslB,UAAU5G,UAAU1d,KACzB,MAAMgB,EAAqBC,EAEnC,EACO0jB,CACX,CA5KoC,GAkMhCM,GAAsC,WACtC,SAASA,EAAqBlD,EAAKuC,GAC/BtlB,KAAK+iB,IAAMA,EACX/iB,KAAKslB,UAAYA,CACrB,CAmDA,OAlDAjlB,OAAOI,eAAewlB,EAAqB1lB,UAAW,wBAAyB,CAC3EG,IAAK,WACD,OAAOV,KAAKslB,UAAUnM,qBAC1B,EACAvY,YAAY,EACZC,cAAc,IAElBR,OAAOI,eAAewlB,EAAqB1lB,UAAW,qBAAsB,CACxEG,IAAK,WACD,OAAOV,KAAKslB,UAAU7K,kBAC1B,EACA7Z,YAAY,EACZC,cAAc,IAMlBolB,EAAqB1lB,UAAUvE,IAAM,SAAUgF,GAC3C,GAAIghB,GAAMhhB,GACN,MAAMc,EAAgB,sEAE1B,OAAO,IAAI6jB,GAAgB3pB,GAAIgE,KAAKslB,UAAWtkB,GAAOhB,KAC1D,EAKAimB,EAAqB1lB,UAAU2hB,WAAa,SAAUxkB,GAClD,IAAKskB,GAAMtkB,GACP,MAAMoE,EAAgB,6EAE1B,IACIyG,EAASU,YAAYvL,EAAKsC,KAAKslB,UAAUvc,KAC7C,CACA,MAAO/L,GACH,MAAM8E,EAAgB,iEAC1B,CACA,OAAO,IAAI6jB,GAAgB3pB,GAAIgE,KAAKslB,UAAW5nB,GAAMsC,KACzD,EACAimB,EAAqB1lB,UAAU2lB,sBAAwB,SAAUrC,GAC7D7jB,KAAKslB,UAAU7K,mBAAqBoJ,CACxC,EACAoC,EAAqB1lB,UAAU4lB,yBAA2B,SAAUtC,GAChE7jB,KAAKslB,UAAUnM,sBAAwB0K,CAC3C,EACAoC,EAAqB1lB,UAAU6lB,YAAc,SAAUrd,EAAM6Z,EAAMpB,QAC/C,IAAZA,IAAsBA,EAAU,CAAC,GACrC4D,GAAuBplB,KAAKslB,UAAWvc,EAAM6Z,EAAMpB,EACvD,EACOyE,CACX,CAxDyC,GA0DrC,GAAO,oBACPpc,GAAU,QAqBVwc,GAAe;;;;;;;;;;;;;;;;GACnB,SAASC,GAAQC,EAAWvO,GACxB,IAAIta,EAAMsa,EAAGwO,mBAGTzD,EAAMwD,EAAUE,YAAY,OAAOxC,eACnCyC,EAAeH,EAAUE,YAAY,iBACrCE,EAAmBJ,EAAUE,YAAY,sBAGzCG,EAAuB,IAAIX,GAAqBlD,EAAK,IAAIX,GAAoBW,EAAK2D,EAAcC,EAAkB,IAAIte,EAAkB3K,EAAK,IAASmpB,cAC1J,OAAOD,CACX,CACA,SAASE,GAAgBC,GACrB,IAAIC,EAAmB,CAEnBthB,UAAWA,EACXF,UAAWA,EACXhD,aAAcA,EACdykB,QAAS7E,GACTzB,UAAWgF,IAEfoB,EAASG,SAASC,kBAAkB,IAAI,KAAUd,GAAcC,GAAS,UACpEc,gBAAgBJ,GAChBK,sBAAqB,IAC1BN,EAASO,gBAAgB,GAAMzd,GACnC,CACAid,GAAgB,I,2CCv1HhB,MAAMzpB,EAAcA,CAACD,EAAME,IAChB,IAAImJ,SAAQ,CAACC,EAASuE,KACzB,IAIQ7N,EACAiP,YAAWkb,UACP,IAAIC,EAAWC,KAAKC,MAAQ,IAAMtqB,EAAK6E,KACvC,MAAM0lB,QAAiBC,EAAAA,EAClBrJ,UACAviB,IAAK,GAAEsB,KAAakqB,KACpB1B,IAAI1oB,GACHM,QAAYiqB,EAAS3rB,IAAIipB,iBAC/B,IAAIjpB,EAAM2rB,EAASvS,SACfyS,EAAS7rB,EAAIiG,KACbzE,EAAS,CAAEE,IAAKA,EAAKZ,GAAI+qB,GAC7BnhB,EAAQlJ,EAAO,GAChB,IAGHM,QAAQC,IAAI,mBAGpB,CAAE,MAAOF,GACLoN,EAAOpN,EACX,KAgCR,K","sources":["webpack://insitutodiversificado/./src/components/Administracion/Cargas/Carreras/CargaFotos.vue","webpack://insitutodiversificado/src/components/Administracion/Cargas/Carreras/CargaFotos.vue","webpack://insitutodiversificado/./src/components/Administracion/Cargas/Carreras/CargaFotos.vue?4a30","webpack://insitutodiversificado/./src/components/Administracion/Cargas/Carreras/CargaFotos.vue?9fc6","webpack://insitutodiversificado/./node_modules/@firebase/storage/dist/index.browser.esm.js","webpack://insitutodiversificado/./src/controller/update.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-row',[_vm._l((_vm.photos),function(item,i){return _c('v-col',{key:i,staticClass:\"d-flex child-flex\",attrs:{\"cols\":\"4\"}},[_c('v-img',{staticStyle:{\"object-fit\":\"cover\"},attrs:{\"src\":item.img,\"max-width\":\"100\",\"height\":\"100\"},scopedSlots:_vm._u([((_vm.loading = true))?{key:\"placeholder\",fn:function(){return [_c('v-row',{staticClass:\"fill-height ma-0\",attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-progress-circular',{attrs:{\"indeterminate\":\"\",\"color\":\"grey lighten-5\"}})],1)]},proxy:true}:null],null,true)},[_c('v-btn',{staticClass:\"mx-1 img-close\",attrs:{\"dark\":\"\",\"small\":\"\",\"icon\":\"\",\"color\":\"red\"},on:{\"click\":function($event){return _vm.deletePhoto(i, item)}}},[_c('v-icon',{attrs:{\"size\":\"35\",\"dark\":\"\"}},[_vm._v(\" mdi-close-circle \")])],1)],1)],1)}),_c('v-col',{staticClass:\"d-flex child-flex\",attrs:{\"cols\":\"4\"}},[_c('v-img',{staticClass:\"file-upload\",attrs:{\"src\":require(\"../../../../assets/add.jpg\")}},[_c('input',{ref:\"photo\",staticClass:\"input-photo\",attrs:{\"type\":\"file\",\"accept\":\"image/jpeg image/jpg image/png\",\"value\":\"\"},on:{\"click\":function($event){_vm.$refs.photo.value = null},\"change\":function($event){return _vm.uploadPhoto($event)}}})])],1)],2)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col\r\n        class=\"d-flex child-flex\"\r\n        cols=\"4\"\r\n        v-for=\"(item, i) in photos\"\r\n        :key=\"i\"\r\n      >\r\n        <v-img :src=\"item.img\" max-width=\"100\" height=\"100\" style=\"object-fit: cover\">\r\n          <v-btn\r\n            @click=\"deletePhoto(i, item)\"\r\n            class=\"mx-1 img-close\"\r\n            dark\r\n            small\r\n            icon\r\n            color=\"red\"\r\n          >\r\n            <v-icon size=\"35\" dark> mdi-close-circle </v-icon>\r\n          </v-btn>\r\n          <template v-slot:placeholder v-if=\"(loading = true)\">\r\n            <v-row class=\"fill-height ma-0\" align=\"center\" justify=\"center\">\r\n              <v-progress-circular\r\n                indeterminate\r\n                color=\"grey lighten-5\"\r\n              ></v-progress-circular>\r\n            </v-row>\r\n          </template>\r\n        </v-img>\r\n      </v-col>\r\n      <v-col class=\"d-flex child-flex\" cols=\"4\">\r\n        <v-img\r\n          class=\"file-upload\"\r\n          src=\"../../../../assets/add.jpg\"\r\n          ><input\r\n            class=\"input-photo\"\r\n            type=\"file\"\r\n            ref=\"photo\"\r\n            accept=\"image/jpeg image/jpg image/png\"\r\n            value=\"\"\r\n            @click=\"$refs.photo.value = null\"\r\n            @change=\"uploadPhoto($event)\"\r\n          />\r\n        </v-img>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport updatePhoto from \"@/controller/update\";\r\nimport api from \"@/models/controller\";\r\nexport default {\r\n  props: [\"categoria\", 'listaphotos'],\r\n  data: () => ({\r\n    photos: [],\r\n    loading: false,\r\n  }),\r\n  methods: {\r\n    onInputClick: function (event) {\r\n      event.target.value = \"\";\r\n    },\r\n    addImage: function () {\r\n      this.photos.push({\r\n        img: \"https://icon-library.com/images/add-image-icon-png/add-image-icon-png-14.jpg\",\r\n        id: \"\",\r\n      });\r\n    },\r\n\r\n    uploadPhoto: function (e) {\r\n     try {\r\n        const { files } = this.$refs.photo;\r\n        const file = files[0];\r\n        updatePhoto(file, this.categoria).then((result) => {\r\n          var dataimg = result;\r\n          this.photos.push({\r\n            img: dataimg.url,\r\n            id: dataimg.id,\r\n          });\r\n\r\n          // localStorage.setItem('photos',this.photos);\r\n          this.enviarFotos(this.photos);\r\n        });\r\n        //this.cargarImagen(file, i);\r\n\r\n        e.currentTarget.files = null;\r\n      } catch (error) {\r\n        console.log(\"Error \", error);\r\n      }\r\n\r\n    },\r\n    cargarImagen: function (file, i) {\r\n      let reader = new FileReader();\r\n      reader.onload = (y) => {\r\n        //this.imagenMiniatura = y.target.result;\r\n        this.photos[i].img = y.target.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n\r\n    deletePhoto: function (index, item) {\r\n      let data = {\r\n        id: item.id,\r\n        categoria: this.categoria,\r\n      };\r\n\r\n      console.log(\"dfd \", data)\r\n\r\n      api.deletePhoto(data).then(() => {\r\n        this.photos.splice(index, 1);\r\n        this.enviarFotos(this.photos);\r\n      });\r\n    },\r\n\r\n    enviarFotos: function (datos) {\r\n      this.$emit(\"photos\", datos);\r\n    },\r\n    getCambio:function(){\r\n      console.log(\"ID CATEGORIA : \", this.listaphotos)\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    },\r\n  created() {\r\n    this.photos= this.listaphotos;\r\n    this.$watch(\r\n          () => this.listaphotos,\r\n          (toParams) => {\r\n            // react to route changes...\r\n            this.photos= toParams;\r\n\r\n          }\r\n        );\r\n  },\r\n};\r\n</script >\r\n\r\n<style lang=\"scss\" scoped>\r\n.img-input {\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.input-photo {\r\n  width: 70px;\r\n  height: 90px;\r\n  background: red;\r\n\r\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\r\n  filter: alpha(opacity=0);\r\n}\r\n\r\n.file-upload {\r\n  border-radius: 8px;\r\n  width: 100%;\r\n  /*border: 1px solid #01e934;*/\r\n  /*border-radius: 100px;*/\r\n  overflow: hidden;\r\n  position: relative;\r\n}\r\n.file-upload input {\r\n  position: absolute;\r\n  height: 400px;\r\n  width: 400px;\r\n  left: -200px;\r\n  top: -200px;\r\n  background: transparent;\r\n  opacity: 0;\r\n  -ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\r\n  filter: alpha(opacity=0);\r\n}\r\n.file-upload img {\r\n  height: 200px;\r\n  width: 200px;\r\n  margin: 10px;\r\n  border-radius: 8px;\r\n  color: rgb(241, 241, 6);\r\n}\r\n\r\n.img-close {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 1px;\r\n  height: 40px !important;\r\n\r\n  z-index: 3;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n\r\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CargaFotos.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CargaFotos.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CargaFotos.vue?vue&type=template&id=669081e2&scoped=true\"\nimport script from \"./CargaFotos.vue?vue&type=script&lang=js\"\nexport * from \"./CargaFotos.vue?vue&type=script&lang=js\"\nimport style0 from \"./CargaFotos.vue?vue&type=style&index=0&id=669081e2&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"669081e2\",\n  null\n  \n)\n\nexport default component.exports","import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        /**\r\n         * Stores custom error data unque to FirebaseStorageError.\r\n         */\r\n        _this.customData = { serverResponse: null };\r\n        _this._baseMessage = _this.message;\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    FirebaseStorageError.prototype._codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        /**\r\n         * Optional response message that was added by the server.\r\n         */\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n            if (this.customData.serverResponse) {\r\n                this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                this.message = this._baseMessage;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new FirebaseStorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nvar StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n */\r\nvar TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n/**\r\n * Represents the current state of a running upload.\r\n */\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nvar XhrConnection = /** @class */ (function () {\r\n    function XhrConnection() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return XhrConnection;\r\n}());\r\nfunction newConnection() {\r\n    return new XhrConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar ConnectionPool = /** @class */ (function () {\r\n    function ConnectionPool() {\r\n    }\r\n    ConnectionPool.prototype.createConnection = function () {\r\n        return newConnection();\r\n    };\r\n    return ConnectionPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString, host) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url, host) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host) {\r\n    var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\r\n    var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\r\n    var origin = host;\r\n    if (protocol == null) {\r\n        origin = \"https://\" + host;\r\n    }\r\n    return origin + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var connection = self.pool_.createConnection();\r\n            self.pendingConnection_ = connection;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function () {\r\n                if (self.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingConnection_ = null;\r\n                var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = connection.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(connection, connection.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = connection.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart, host);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getResponseText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': \"\" + status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(function (_a) {\r\n            var authToken = _a[0], appCheckToken = _a[1];\r\n            switch (_this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    _this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    _this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest.getPromise().then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        /**\r\n         * A snapshot of the current task state.\r\n         */\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return {\r\n                bytesTransferred: this._transferred,\r\n                totalBytes: this._blob.size(),\r\n                state: externalState,\r\n                metadata: this._metadata,\r\n                task: this,\r\n                ref: this._ref\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `FirebaseStorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype._newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * A reference to the root of this object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this._newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        /**\r\n         * The name of the bucket containing this reference's object.\r\n         */\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        /**\r\n         * The full path of this object.\r\n         */\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        /**\r\n         * The short name of this object, which is the last component of the full path.\r\n         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n         */\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        /**\r\n         * The `StorageService` instance this `StorageReference` is associated with.\r\n         */\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n         * this reference is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    op = options || {};\r\n                    requestInfo = list$2(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent())\r\n                        .getPromise()\r\n                        .then(function (url) {\r\n                        if (url === null) {\r\n                            throw noDownloadURL();\r\n                        }\r\n                        return url;\r\n                    })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    requestInfo = deleteObject$2(ref.storage, ref._location);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    storage.host = \"http://\" + host + \":\" + port;\r\n    var mockUserToken = options.mockUserToken;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar FirebaseStorageImpl = /** @class */ (function () {\r\n    function FirebaseStorageImpl(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         * - protocol://host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        /**\r\n         * Set host string for this service.\r\n         * @param host - host string in the form of host, host:port,\r\n         * or protocol://host:port\r\n         */\r\n        set: function (host) {\r\n            this._host = host;\r\n            if (this._url != null) {\r\n                this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n            }\r\n            else {\r\n                this._bucket = extractBucket(host, this.app.options);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\r\n        /**\r\n         * The maximum time to retry uploads in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\r\n        /**\r\n         * The maximum time to retry operations other than uploads or downloads in\r\n         * milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseStorageImpl.prototype._getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._overrideAuthToken) {\r\n                            return [2 /*return*/, this._overrideAuthToken];\r\n                        }\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FirebaseStorageImpl.prototype._getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // TODO: What do we want to do if there is an error getting the token?\r\n                        // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n                        // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n                        // the token (actual or dummy) to send requests.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    FirebaseStorageImpl.prototype._delete = function () {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(function (request) { return request.cancel(); });\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, authToken, appCheckToken;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._getAuthToken(),\r\n                            this._getAppCheckToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\r\n                        return [2 /*return*/, this._makeRequest(requestInfo, authToken, appCheckToken)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return FirebaseStorageImpl;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = _getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = __assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list(this._delegate, options || undefined).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A `Promise` that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A `Promise` that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A `Promise` that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A `Promise` that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url, this._delegate.host);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectStorageEmulator(this._delegate, host, port, options);\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.7.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, _a) {\r\n    var url = _a.instanceIdentifier;\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    var appCheckProvider = container.getProvider('app-check-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, firebase.SDK_VERSION));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: FirebaseStorageImpl,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n//# sourceMappingURL=index.browser.esm.js.map\n","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nconst updatePhoto = (file, categoria) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n\r\n            /*const { files } = refs;\r\n            const file = files[0]; */\r\n            if (file) {\r\n                setTimeout(async () => {\r\n                    var nameFile = Date.now() + \"_\" + file.name;\r\n                    const response = await firebase\r\n                        .storage()\r\n                        .ref(`${categoria}/${nameFile}`)\r\n                        .put(file);\r\n                    const url = await response.ref.getDownloadURL();\r\n                    var ref = response.metadata;\r\n                    var idfoto = ref.name;\r\n                    var result = { url: url, id: idfoto }\r\n                    resolve(result)\r\n                }, 10);\r\n\r\n            } else {\r\n                console.log(\"falta el archivo\");\r\n\r\n            }\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n}\r\n\r\n/*const updatePhotoProfile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n\r\n            if (file) {\r\n                setTimeout(async () => {\r\n                    var nameFile = Date.now() + \"_\" + file.name;\r\n                    const response = await firebase\r\n                        .storage()\r\n                        .ref(`Profile/${nameFile}`)\r\n                        .put(file);\r\n                    const url = await response.ref.getDownloadURL();\r\n                    var ref = response.metadata;\r\n                    var idfoto = ref.name;\r\n                    var result = { url: url, id: idfoto }\r\n                    resolve(result)\r\n                }, 10);\r\n\r\n            } else {\r\n                console.log(\"falta el archivo\");\r\n\r\n            }\r\n        } catch (error) {\r\n            reject(error)\r\n        }\r\n    })\r\n} */\r\n\r\nexport default updatePhoto"],"names":["_c","staticStyle","attrs","scopedSlots","_vm","key","staticClass","on","require","ref","staticRenderFns","props","data","photos","loading","methods","onInputClick","event","target","value","addImage","push","img","id","uploadPhoto","e","files","$refs","photo","file","updatePhoto","categoria","then","result","dataimg","url","enviarFotos","currentTarget","error","console","log","cargarImagen","i","reader","FileReader","onload","y","readAsDataURL","deletePhoto","index","item","api","splice","datos","$emit","getCambio","listaphotos","watch","created","$watch","toParams","component","render","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","_super","code","message","_this","call","this","prependCode","customData","serverResponse","_baseMessage","Object","setPrototypeOf","prototype","_codeEquals","defineProperty","get","set","enumerable","configurable","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","decodeBase64","encoded","atob","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","b","length","c","charCodeAt","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","ErrorCode","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","XhrConnection","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","undefined","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","newConnection","ConnectionPool","createConnection","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","host","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","FailRequest","promise_","reject","getPromise","cancel","_appDelete","start","f","callback","timeout","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","arguments","apply","callWithDelay","millis","setTimeout","handler","success","waitMillis","mustStop","Math","random","stopped","stop","wasTimeout","clearTimeout","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocolMatch","protocol","origin","makeQueryString","params","queryPart","nextPart","NetworkRequest","successCodes","additionalRetryCodes","errorCallback","progressCallback","pool","pendingConnection_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","hitServer","isRetryStatusCode_","successCode","wasCanceled","progressEvent","loaded","total","lengthComputable","backoffDone","requestWentThrough","wasSuccessCode","err","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","urlParams","assign","errorHandler","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","sliceBlob","blob","webkitSlice","mozSlice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","jsonObjectOrNull","obj","JSON","parse","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","join","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata$2","maxOperationRetryTime","list$2","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata$2","deleteObject$2","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","complete","asFunctions","next","observer","argsToForward","UploadTask","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","storage","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","_finishPromise","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","_service","_newRef","_throwIfRoot","uploadBytesResumable$1","listAll$1","accumulator","listAllHelper","opt","nextPage","label","list$1","sent","options","op","makeRequestWithTokens","getMetadata$1","updateMetadata$1","getDownloadURL$1","deleteObject$1","_getChild$1","isUrl","test","refFromURL","refFromPath","FirebaseStorageImpl","_bucket","ref$1","serviceOrRef","pathOrUrl","extractBucket","config","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","app","projectId","_authProvider","_appCheckProvider","_pool","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","appCheck","_delete","request","clear","request_1","add","delete","uploadBytesResumable","getMetadata","updateMetadata","list","listAll","getDownloadURL","deleteObject","_getChild","connectStorageEmulator","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","parent","put","putString","r","StorageServiceCompat","setMaxUploadRetryTime","setMaxOperationRetryTime","useEmulator","STORAGE_TYPE","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","storageServiceCompat","SDK_VERSION","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","setMultipleInstances","registerVersion","async","nameFile","Date","now","response","firebase","idfoto"],"sourceRoot":""}